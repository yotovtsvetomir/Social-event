<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Phidget21.NET.2.1.8.19.Fakes</name>
    </assembly>
    <members>
        <member name="T:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs">
            <summary>Shim type of Phidgets.Events.AccelerationChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs.#ctor(Phidgets.Events.AccelerationChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs.ConstructorInt32Double">
            <summary>Sets the shim of AccelerationChangeEventArgs.AccelerationChangeEventArgs(Int32 Index, Double Acceleration)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimAccelerationChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimAttachEventArgs">
            <summary>Shim type of Phidgets.Events.AttachEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAttachEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAttachEventArgs.#ctor(Phidgets.Events.AttachEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAttachEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimAttachEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimAttachEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimAttachEventArgs.ConstructorPhidget">
            <summary>Sets the shim of AttachEventArgs.AttachEventArgs(Phidget phidget)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimAttachEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs">
            <summary>Shim type of Phidgets.Events.BackEMFUpdateEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs.#ctor(Phidgets.Events.BackEMFUpdateEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs.ConstructorInt32Double">
            <summary>Sets the shim of BackEMFUpdateEventArgs.BackEMFUpdateEventArgs(Int32 Index, Double Value)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimBackEMFUpdateEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimBridgeDataEventArgs">
            <summary>Shim type of Phidgets.Events.BridgeDataEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBridgeDataEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBridgeDataEventArgs.#ctor(Phidgets.Events.BridgeDataEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBridgeDataEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimBridgeDataEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimBridgeDataEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimBridgeDataEventArgs.ConstructorInt32Double">
            <summary>Sets the shim of BridgeDataEventArgs.BridgeDataEventArgs(Int32 Index, Double Value)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimBridgeDataEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs">
            <summary>Shim type of Phidgets.Events.CurrentChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs.#ctor(Phidgets.Events.CurrentChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs.ConstructorInt32Double">
            <summary>Sets the shim of CurrentChangeEventArgs.CurrentChangeEventArgs(Int32 Index, Double Current)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimCurrentChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs">
            <summary>Shim type of Phidgets.Events.CurrentUpdateEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs.#ctor(Phidgets.Events.CurrentUpdateEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs.ConstructorInt32Double">
            <summary>Sets the shim of CurrentUpdateEventArgs.CurrentUpdateEventArgs(Int32 Index, Double Current)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimCurrentUpdateEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimDetachEventArgs">
            <summary>Shim type of Phidgets.Events.DetachEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimDetachEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimDetachEventArgs.#ctor(Phidgets.Events.DetachEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimDetachEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimDetachEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimDetachEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimDetachEventArgs.ConstructorPhidget">
            <summary>Sets the shim of DetachEventArgs.DetachEventArgs(Phidget phidget)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimDetachEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs">
            <summary>Shim type of Phidgets.Events.EncoderPositionChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.#ctor(Phidgets.Events.EncoderPositionChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.ConstructorInt32Int32Int32">
            <summary>Sets the shim of EncoderPositionChangeEventArgs.EncoderPositionChangeEventArgs(Int32 Index, Int32 Time, Int32 PositionChange)</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.TimeGet">
            <summary>Sets the shim of EncoderPositionChangeEventArgs.get_Time()</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimEncoderPositionChangeEventArgs.AllInstances.TimeGet">
            <summary>Sets the shim of EncoderPositionChangeEventArgs.get_Time()</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs">
            <summary>Shim type of Phidgets.Events.EncoderPositionUpdateEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs.#ctor(Phidgets.Events.EncoderPositionUpdateEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs.ConstructorInt32Int32">
            <summary>Sets the shim of EncoderPositionUpdateEventArgs.EncoderPositionUpdateEventArgs(Int32 Index, Int32 PositionChange)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimEncoderPositionUpdateEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimErrorEventArgs">
            <summary>Shim type of Phidgets.Events.ErrorEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimErrorEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimErrorEventArgs.#ctor(Phidgets.Events.ErrorEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimErrorEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimErrorEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.CodeGet">
            <summary>Sets the shim of ErrorEventArgs.get_Code()</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.ConstructorPhidgetException">
            <summary>Sets the shim of ErrorEventArgs.ErrorEventArgs(PhidgetException ex)</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.DescriptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Description()</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.TypeGet">
            <summary>Sets the shim of ErrorEventArgs.get_Type()</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimErrorEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.AllInstances.CodeGet">
            <summary>Sets the shim of ErrorEventArgs.get_Code()</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.AllInstances.DescriptionGet">
            <summary>Sets the shim of ErrorEventArgs.get_Description()</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimErrorEventArgs.AllInstances.TypeGet">
            <summary>Sets the shim of ErrorEventArgs.get_Type()</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs">
            <summary>Shim type of Phidgets.Events.FrequencyCounterCountEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs.#ctor(Phidgets.Events.FrequencyCounterCountEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs.ConstructorInt32Int32Int32">
            <summary>Sets the shim of FrequencyCounterCountEventArgs.FrequencyCounterCountEventArgs(Int32 Index, Int32 Time, Int32 Counts)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimFrequencyCounterCountEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs">
            <summary>Shim type of Phidgets.Events.GPSPositionChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs.#ctor(Phidgets.Events.GPSPositionChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs.ConstructorDoubleDoubleDouble">
            <summary>Sets the shim of GPSPositionChangeEventArgs.GPSPositionChangeEventArgs(Double lat, Double lon, Double alt)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimGPSPositionChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs">
            <summary>Shim type of Phidgets.Events.GPSPositionFixStatusChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs.#ctor(Phidgets.Events.GPSPositionFixStatusChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs.ConstructorBoolean">
            <summary>Sets the shim of GPSPositionFixStatusChangeEventArgs.GPSPositionFixStatusChangeEventArgs(Boolean status)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimGPSPositionFixStatusChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimIRCodeEventArgs">
            <summary>Shim type of Phidgets.Events.IRCodeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRCodeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRCodeEventArgs.#ctor(Phidgets.Events.IRCodeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRCodeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRCodeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimIRCodeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimIRCodeEventArgs.ConstructorByteArrayInt32Boolean">
            <summary>Sets the shim of IRCodeEventArgs.IRCodeEventArgs(Byte[] data, Int32 length, Boolean repeat)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimIRCodeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimIRLearnEventArgs">
            <summary>Shim type of Phidgets.Events.IRLearnEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRLearnEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRLearnEventArgs.#ctor(Phidgets.Events.IRLearnEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRLearnEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRLearnEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimIRLearnEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimIRLearnEventArgs.ConstructorByteArrayIRCodeInfo">
            <summary>Sets the shim of IRLearnEventArgs.IRLearnEventArgs(Byte[] data, IRCodeInfo codeInfo)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimIRLearnEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimIRRawDataEventArgs">
            <summary>Shim type of Phidgets.Events.IRRawDataEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRRawDataEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRRawDataEventArgs.#ctor(Phidgets.Events.IRRawDataEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRRawDataEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimIRRawDataEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimIRRawDataEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimIRRawDataEventArgs.ConstructorInt32Array">
            <summary>Sets the shim of IRRawDataEventArgs.IRRawDataEventArgs(Int32[] data)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimIRRawDataEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimInputChangeEventArgs">
            <summary>Shim type of Phidgets.Events.InputChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimInputChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimInputChangeEventArgs.#ctor(Phidgets.Events.InputChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimInputChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimInputChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimInputChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimInputChangeEventArgs.ConstructorInt32Boolean">
            <summary>Sets the shim of InputChangeEventArgs.InputChangeEventArgs(Int32 Index, Boolean Value)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimInputChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimKeyEventArgs">
            <summary>Shim type of Phidgets.Events.KeyEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimKeyEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimKeyEventArgs.#ctor(Phidgets.Events.KeyEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimKeyEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimKeyEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimKeyEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimKeyEventArgs.ConstructorStringString">
            <summary>Sets the shim of KeyEventArgs.KeyEventArgs(String key, String value)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimKeyEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimOutputChangeEventArgs">
            <summary>Shim type of Phidgets.Events.OutputChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimOutputChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimOutputChangeEventArgs.#ctor(Phidgets.Events.OutputChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimOutputChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimOutputChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimOutputChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimOutputChangeEventArgs.ConstructorInt32Boolean">
            <summary>Sets the shim of OutputChangeEventArgs.OutputChangeEventArgs(Int32 Index, Boolean Value)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimOutputChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimPHChangeEventArgs">
            <summary>Shim type of Phidgets.Events.PHChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPHChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPHChangeEventArgs.#ctor(Phidgets.Events.PHChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPHChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPHChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimPHChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimPHChangeEventArgs.ConstructorDouble">
            <summary>Sets the shim of PHChangeEventArgs.PHChangeEventArgs(Double PH)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimPHChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimPositionChangeEventArgs">
            <summary>Shim type of Phidgets.Events.PositionChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPositionChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPositionChangeEventArgs.#ctor(Phidgets.Events.PositionChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPositionChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimPositionChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimPositionChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimPositionChangeEventArgs.ConstructorInt32Double">
            <summary>Sets the shim of PositionChangeEventArgs.PositionChangeEventArgs(Int32 Index, Double Position)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimPositionChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimSensorChangeEventArgs">
            <summary>Shim type of Phidgets.Events.SensorChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorChangeEventArgs.#ctor(Phidgets.Events.SensorChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimSensorChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimSensorChangeEventArgs.ConstructorInt32Int32">
            <summary>Sets the shim of SensorChangeEventArgs.SensorChangeEventArgs(Int32 Index, Int32 Value)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimSensorChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs">
            <summary>Shim type of Phidgets.Events.SensorUpdateEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs.#ctor(Phidgets.Events.SensorUpdateEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs.ConstructorInt32Int32">
            <summary>Sets the shim of SensorUpdateEventArgs.SensorUpdateEventArgs(Int32 Index, Int32 Value)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimSensorUpdateEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimServerConnectEventArgs">
            <summary>Shim type of Phidgets.Events.ServerConnectEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerConnectEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerConnectEventArgs.#ctor(Phidgets.Events.ServerConnectEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerConnectEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerConnectEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimServerConnectEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimServerConnectEventArgs.ConstructorObject">
            <summary>Sets the shim of ServerConnectEventArgs.ServerConnectEventArgs(Object obj)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimServerConnectEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs">
            <summary>Shim type of Phidgets.Events.ServerDisconnectEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs.#ctor(Phidgets.Events.ServerDisconnectEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs.ConstructorObject">
            <summary>Sets the shim of ServerDisconnectEventArgs.ServerDisconnectEventArgs(Object obj)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimServerDisconnectEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimSpatialDataEventArgs">
            <summary>Shim type of Phidgets.Events.SpatialDataEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSpatialDataEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSpatialDataEventArgs.#ctor(Phidgets.Events.SpatialDataEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSpatialDataEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimSpatialDataEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimSpatialDataEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimSpatialDataEventArgs.ConstructorSpatialEventDataArray">
            <summary>Sets the shim of SpatialDataEventArgs.SpatialDataEventArgs(SpatialEventData[] spatialData)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimSpatialDataEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs">
            <summary>Shim type of Phidgets.Events.StepperPositionChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs.#ctor(Phidgets.Events.StepperPositionChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs.ConstructorInt32Int64">
            <summary>Sets the shim of StepperPositionChangeEventArgs.StepperPositionChangeEventArgs(Int32 Index, Int64 Position)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimStepperPositionChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimTagEventArgs">
            <summary>Shim type of Phidgets.Events.TagEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTagEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTagEventArgs.#ctor(Phidgets.Events.TagEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTagEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTagEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimTagEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimTagEventArgs.ConstructorString">
            <summary>Sets the shim of TagEventArgs.TagEventArgs(String Tag)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimTagEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs">
            <summary>Shim type of Phidgets.Events.TemperatureChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs.#ctor(Phidgets.Events.TemperatureChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs.ConstructorInt32DoubleDouble">
            <summary>Sets the shim of TemperatureChangeEventArgs.TemperatureChangeEventArgs(Int32 Index, Double Temperature, Double Potential)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimTemperatureChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs">
            <summary>Shim type of Phidgets.Events.VelocityChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs.#ctor(Phidgets.Events.VelocityChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs.ConstructorInt32Double">
            <summary>Sets the shim of VelocityChangeEventArgs.VelocityChangeEventArgs(Int32 Index, Double Velocity)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimVelocityChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimWeightChangeEventArgs">
            <summary>Shim type of Phidgets.Events.WeightChangeEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimWeightChangeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimWeightChangeEventArgs.#ctor(Phidgets.Events.WeightChangeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimWeightChangeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.ShimWeightChangeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimWeightChangeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.ShimWeightChangeEventArgs.ConstructorDouble">
            <summary>Sets the shim of WeightChangeEventArgs.WeightChangeEventArgs(Double Weight)</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.ShimWeightChangeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Events.Fakes.StubErrorEventArgs">
            <summary>Stub type of Phidgets.Events.ErrorEventArgs</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.StubErrorEventArgs.#ctor(Phidgets.PhidgetException)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Events.Fakes.StubErrorEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubErrorEventArgs</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.StubErrorEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.StubErrorEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Events.Fakes.StubErrorEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAccelerometer">
            <summary>Shim type of Phidgets.Accelerometer</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometer.#ctor(Phidgets.Accelerometer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AccelerationChangeAddAccelerationChangeEventHandler">
            <summary>Sets the shim of Accelerometer.add_AccelerationChange(AccelerationChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AccelerationChangeRemoveAccelerationChangeEventHandler">
            <summary>Sets the shim of Accelerometer.remove_AccelerationChange(AccelerationChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Accelerometer.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.Constructor">
            <summary>Sets the shim of Accelerometer.Accelerometer()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Accelerometer.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.OnAccelerationChangeAccelerationChangeEventArgs">
            <summary>Sets the shim of Accelerometer.OnAccelerationChange(AccelerationChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.nativeAccelerationChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Accelerometer.nativeAccelerationChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.setNativeEvents">
            <summary>Sets the shim of Accelerometer.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAccelerometer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AllInstances.AccelerationChangeAddAccelerationChangeEventHandler">
            <summary>Sets the shim of Accelerometer.add_AccelerationChange(AccelerationChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AllInstances.AccelerationChangeRemoveAccelerationChangeEventHandler">
            <summary>Sets the shim of Accelerometer.remove_AccelerationChange(AccelerationChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Accelerometer.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Accelerometer.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AllInstances.OnAccelerationChangeAccelerationChangeEventArgs">
            <summary>Sets the shim of Accelerometer.OnAccelerationChange(AccelerationChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AllInstances.nativeAccelerationChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Accelerometer.nativeAccelerationChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometer.AllInstances.setNativeEvents">
            <summary>Sets the shim of Accelerometer.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAccelerometerAxis">
            <summary>Shim type of Phidgets.AccelerometerAxis</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxis.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxis.#ctor(Phidgets.AccelerometerAxis)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AccelerationGet">
            <summary>Sets the shim of AccelerometerAxis.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AccelerationMaxGet">
            <summary>Sets the shim of AccelerometerAxis.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AccelerationMinGet">
            <summary>Sets the shim of AccelerometerAxis.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.ConstructorAccelerometerInt32">
            <summary>Sets the shim of AccelerometerAxis.AccelerometerAxis(Accelerometer phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.ConstructorIntPtrInt32">
            <summary>Sets the shim of AccelerometerAxis.AccelerometerAxis(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.SensitivityGet">
            <summary>Sets the shim of AccelerometerAxis.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.SensitivitySetDouble">
            <summary>Sets the shim of AccelerometerAxis.set_Sensitivity(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAccelerometerAxis.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AllInstances.AccelerationGet">
            <summary>Sets the shim of AccelerometerAxis.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AllInstances.AccelerationMaxGet">
            <summary>Sets the shim of AccelerometerAxis.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AllInstances.AccelerationMinGet">
            <summary>Sets the shim of AccelerometerAxis.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AllInstances.SensitivityGet">
            <summary>Sets the shim of AccelerometerAxis.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxis.AllInstances.SensitivitySetDouble">
            <summary>Sets the shim of AccelerometerAxis.set_Sensitivity(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAccelerometerAxisCollection">
            <summary>Shim type of Phidgets.AccelerometerAxisCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxisCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxisCollection.#ctor(Phidgets.AccelerometerAxisCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxisCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxisCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxisCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAccelerometerAxisCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.Clear">
            <summary>Sets the shim of AccelerometerAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.ConstructorAccelerometer">
            <summary>Sets the shim of AccelerometerAxisCollection.AccelerometerAxisCollection(Accelerometer phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.Initialize">
            <summary>Sets the shim of AccelerometerAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.ItemGetInt32">
            <summary>Sets the shim of AccelerometerAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAccelerometerAxisCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.AllInstances.Clear">
            <summary>Sets the shim of AccelerometerAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.AllInstances.Initialize">
            <summary>Sets the shim of AccelerometerAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAccelerometerAxisCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AccelerometerAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAdvancedServo">
            <summary>Shim type of Phidgets.AdvancedServo</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServo.#ctor(Phidgets.AdvancedServo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of AdvancedServo.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.Constructor">
            <summary>Sets the shim of AdvancedServo.AdvancedServo()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.CurrentChangeAddCurrentChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.add_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.CurrentChangeRemoveCurrentChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.remove_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of AdvancedServo.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.OnCurrentChangeCurrentChangeEventArgs">
            <summary>Sets the shim of AdvancedServo.OnCurrentChange(CurrentChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.OnPositionChangePositionChangeEventArgs">
            <summary>Sets the shim of AdvancedServo.OnPositionChange(PositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.OnVelocityChangeVelocityChangeEventArgs">
            <summary>Sets the shim of AdvancedServo.OnVelocityChange(VelocityChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.PositionChangeAddPositionChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.add_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.PositionChangeRemovePositionChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.remove_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.VelocityChangeAddVelocityChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.add_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.VelocityChangeRemoveVelocityChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.remove_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.nativeCurrentChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of AdvancedServo.nativeCurrentChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.nativePositionChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of AdvancedServo.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.nativeVelocityChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of AdvancedServo.nativeVelocityChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.setNativeEvents">
            <summary>Sets the shim of AdvancedServo.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAdvancedServo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of AdvancedServo.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.CurrentChangeAddCurrentChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.add_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.CurrentChangeRemoveCurrentChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.remove_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of AdvancedServo.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.OnCurrentChangeCurrentChangeEventArgs">
            <summary>Sets the shim of AdvancedServo.OnCurrentChange(CurrentChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.OnPositionChangePositionChangeEventArgs">
            <summary>Sets the shim of AdvancedServo.OnPositionChange(PositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.OnVelocityChangeVelocityChangeEventArgs">
            <summary>Sets the shim of AdvancedServo.OnVelocityChange(VelocityChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.PositionChangeAddPositionChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.add_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.PositionChangeRemovePositionChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.remove_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.VelocityChangeAddVelocityChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.add_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.VelocityChangeRemoveVelocityChangeEventHandler">
            <summary>Sets the shim of AdvancedServo.remove_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.nativeCurrentChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of AdvancedServo.nativeCurrentChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.nativePositionChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of AdvancedServo.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.nativeVelocityChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of AdvancedServo.nativeVelocityChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServo.AllInstances.setNativeEvents">
            <summary>Sets the shim of AdvancedServo.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAdvancedServoServo">
            <summary>Shim type of Phidgets.AdvancedServoServo</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServo.#ctor(Phidgets.AdvancedServoServo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AccelerationGet">
            <summary>Sets the shim of AdvancedServoServo.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AccelerationMaxGet">
            <summary>Sets the shim of AdvancedServoServo.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AccelerationMinGet">
            <summary>Sets the shim of AdvancedServoServo.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AccelerationSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_Acceleration(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.ConstructorIntPtrInt32">
            <summary>Sets the shim of AdvancedServoServo.AdvancedServoServo(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.CurrentGet">
            <summary>Sets the shim of AdvancedServoServo.get_Current()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.EngagedGet">
            <summary>Sets the shim of AdvancedServoServo.get_Engaged()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.EngagedSetBoolean">
            <summary>Sets the shim of AdvancedServoServo.set_Engaged(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.PositionGet">
            <summary>Sets the shim of AdvancedServoServo.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.PositionMaxGet">
            <summary>Sets the shim of AdvancedServoServo.get_PositionMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.PositionMaxSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_PositionMax(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.PositionMinGet">
            <summary>Sets the shim of AdvancedServoServo.get_PositionMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.PositionMinSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_PositionMin(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.PositionSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_Position(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.SpeedRampingGet">
            <summary>Sets the shim of AdvancedServoServo.get_SpeedRamping()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.SpeedRampingSetBoolean">
            <summary>Sets the shim of AdvancedServoServo.set_SpeedRamping(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.StoppedGet">
            <summary>Sets the shim of AdvancedServoServo.get_Stopped()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.TypeGet">
            <summary>Sets the shim of AdvancedServoServo.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.TypeSetServoServoServoType">
            <summary>Sets the shim of AdvancedServoServo.set_Type(ServoType value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.VelocityGet">
            <summary>Sets the shim of AdvancedServoServo.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.VelocityLimitGet">
            <summary>Sets the shim of AdvancedServoServo.get_VelocityLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.VelocityLimitSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_VelocityLimit(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.VelocityMaxGet">
            <summary>Sets the shim of AdvancedServoServo.get_VelocityMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.VelocityMinGet">
            <summary>Sets the shim of AdvancedServoServo.get_VelocityMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.setServoParametersDoubleDoubleDoubleDouble">
            <summary>Sets the shim of AdvancedServoServo.setServoParameters(Double minimumPulseWidth, Double maximumPulseWidth, Double degrees, Double velocityMax)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.AccelerationGet">
            <summary>Sets the shim of AdvancedServoServo.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.AccelerationMaxGet">
            <summary>Sets the shim of AdvancedServoServo.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.AccelerationMinGet">
            <summary>Sets the shim of AdvancedServoServo.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.AccelerationSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_Acceleration(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.CurrentGet">
            <summary>Sets the shim of AdvancedServoServo.get_Current()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.EngagedGet">
            <summary>Sets the shim of AdvancedServoServo.get_Engaged()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.EngagedSetBoolean">
            <summary>Sets the shim of AdvancedServoServo.set_Engaged(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.PositionGet">
            <summary>Sets the shim of AdvancedServoServo.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.PositionMaxGet">
            <summary>Sets the shim of AdvancedServoServo.get_PositionMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.PositionMaxSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_PositionMax(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.PositionMinGet">
            <summary>Sets the shim of AdvancedServoServo.get_PositionMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.PositionMinSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_PositionMin(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.PositionSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_Position(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.SpeedRampingGet">
            <summary>Sets the shim of AdvancedServoServo.get_SpeedRamping()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.SpeedRampingSetBoolean">
            <summary>Sets the shim of AdvancedServoServo.set_SpeedRamping(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.StoppedGet">
            <summary>Sets the shim of AdvancedServoServo.get_Stopped()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.TypeGet">
            <summary>Sets the shim of AdvancedServoServo.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.TypeSetServoServoServoType">
            <summary>Sets the shim of AdvancedServoServo.set_Type(ServoType value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.VelocityGet">
            <summary>Sets the shim of AdvancedServoServo.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.VelocityLimitGet">
            <summary>Sets the shim of AdvancedServoServo.get_VelocityLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.VelocityLimitSetDouble">
            <summary>Sets the shim of AdvancedServoServo.set_VelocityLimit(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.VelocityMaxGet">
            <summary>Sets the shim of AdvancedServoServo.get_VelocityMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.VelocityMinGet">
            <summary>Sets the shim of AdvancedServoServo.get_VelocityMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServo.AllInstances.setServoParametersDoubleDoubleDoubleDouble">
            <summary>Sets the shim of AdvancedServoServo.setServoParameters(Double minimumPulseWidth, Double maximumPulseWidth, Double degrees, Double velocityMax)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAdvancedServoServoCollection">
            <summary>Shim type of Phidgets.AdvancedServoServoCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServoCollection.#ctor(Phidgets.AdvancedServoServoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAdvancedServoServoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.Clear">
            <summary>Sets the shim of AdvancedServoServoCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.ConstructorAdvancedServo">
            <summary>Sets the shim of AdvancedServoServoCollection.AdvancedServoServoCollection(AdvancedServo phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.Initialize">
            <summary>Sets the shim of AdvancedServoServoCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.ItemGetInt32">
            <summary>Sets the shim of AdvancedServoServoCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAdvancedServoServoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.AllInstances.Clear">
            <summary>Sets the shim of AdvancedServoServoCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.AllInstances.Initialize">
            <summary>Sets the shim of AdvancedServoServoCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAdvancedServoServoCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AdvancedServoServoCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAnalog">
            <summary>Shim type of Phidgets.Analog</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalog.#ctor(Phidgets.Analog)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalog.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Analog.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalog.Constructor">
            <summary>Sets the shim of Analog.Analog()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalog.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Analog.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAnalog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalog.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Analog.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalog.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Analog.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAnalogOutput">
            <summary>Shim type of Phidgets.AnalogOutput</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutput.#ctor(Phidgets.AnalogOutput)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.ConstructorAnalogInt32">
            <summary>Sets the shim of AnalogOutput.AnalogOutput(Analog phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.ConstructorIntPtrInt32">
            <summary>Sets the shim of AnalogOutput.AnalogOutput(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.EnabledGet">
            <summary>Sets the shim of AnalogOutput.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.EnabledSetBoolean">
            <summary>Sets the shim of AnalogOutput.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.VoltageGet">
            <summary>Sets the shim of AnalogOutput.get_Voltage()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.VoltageMaxGet">
            <summary>Sets the shim of AnalogOutput.get_VoltageMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.VoltageMinGet">
            <summary>Sets the shim of AnalogOutput.get_VoltageMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.VoltageSetDouble">
            <summary>Sets the shim of AnalogOutput.set_Voltage(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAnalogOutput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.AllInstances.EnabledGet">
            <summary>Sets the shim of AnalogOutput.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of AnalogOutput.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.AllInstances.VoltageGet">
            <summary>Sets the shim of AnalogOutput.get_Voltage()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.AllInstances.VoltageMaxGet">
            <summary>Sets the shim of AnalogOutput.get_VoltageMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.AllInstances.VoltageMinGet">
            <summary>Sets the shim of AnalogOutput.get_VoltageMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutput.AllInstances.VoltageSetDouble">
            <summary>Sets the shim of AnalogOutput.set_Voltage(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAnalogOutputCollection">
            <summary>Shim type of Phidgets.AnalogOutputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutputCollection.#ctor(Phidgets.AnalogOutputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutputCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimAnalogOutputCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.Clear">
            <summary>Sets the shim of AnalogOutputCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.ConstructorAnalog">
            <summary>Sets the shim of AnalogOutputCollection.AnalogOutputCollection(Analog phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.Initialize">
            <summary>Sets the shim of AnalogOutputCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.ItemGetInt32">
            <summary>Sets the shim of AnalogOutputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimAnalogOutputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.AllInstances.Clear">
            <summary>Sets the shim of AnalogOutputCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.AllInstances.Initialize">
            <summary>Sets the shim of AnalogOutputCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimAnalogOutputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of AnalogOutputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimBridge">
            <summary>Shim type of Phidgets.Bridge</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridge.#ctor(Phidgets.Bridge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Bridge.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.BridgeDataAddBridgeDataEventHandler">
            <summary>Sets the shim of Bridge.add_BridgeData(BridgeDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.BridgeDataRemoveBridgeDataEventHandler">
            <summary>Sets the shim of Bridge.remove_BridgeData(BridgeDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.Constructor">
            <summary>Sets the shim of Bridge.Bridge()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.DataRateGet">
            <summary>Sets the shim of Bridge.get_DataRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.DataRateMaxGet">
            <summary>Sets the shim of Bridge.get_DataRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.DataRateMinGet">
            <summary>Sets the shim of Bridge.get_DataRateMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.DataRateSetInt32">
            <summary>Sets the shim of Bridge.set_DataRate(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Bridge.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.OnDataBridgeDataEventArgs">
            <summary>Sets the shim of Bridge.OnData(BridgeDataEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.nativeDataEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Bridge.nativeDataEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.setNativeEvents">
            <summary>Sets the shim of Bridge.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimBridge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Bridge.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.BridgeDataAddBridgeDataEventHandler">
            <summary>Sets the shim of Bridge.add_BridgeData(BridgeDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.BridgeDataRemoveBridgeDataEventHandler">
            <summary>Sets the shim of Bridge.remove_BridgeData(BridgeDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.DataRateGet">
            <summary>Sets the shim of Bridge.get_DataRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.DataRateMaxGet">
            <summary>Sets the shim of Bridge.get_DataRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.DataRateMinGet">
            <summary>Sets the shim of Bridge.get_DataRateMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.DataRateSetInt32">
            <summary>Sets the shim of Bridge.set_DataRate(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Bridge.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.OnDataBridgeDataEventArgs">
            <summary>Sets the shim of Bridge.OnData(BridgeDataEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.nativeDataEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Bridge.nativeDataEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridge.AllInstances.setNativeEvents">
            <summary>Sets the shim of Bridge.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimBridgeInput">
            <summary>Shim type of Phidgets.BridgeInput</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInput.#ctor(Phidgets.BridgeInput)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.BridgeMaxGet">
            <summary>Sets the shim of BridgeInput.get_BridgeMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.BridgeMinGet">
            <summary>Sets the shim of BridgeInput.get_BridgeMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.BridgeValueGet">
            <summary>Sets the shim of BridgeInput.get_BridgeValue()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.ConstructorIntPtrInt32">
            <summary>Sets the shim of BridgeInput.BridgeInput(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.EnabledGet">
            <summary>Sets the shim of BridgeInput.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.EnabledSetBoolean">
            <summary>Sets the shim of BridgeInput.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.GainGet">
            <summary>Sets the shim of BridgeInput.get_Gain()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.GainSetBridgeInputGains">
            <summary>Sets the shim of BridgeInput.set_Gain(Gains value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.GaintoInt32BridgeInputGains">
            <summary>Sets the shim of BridgeInput.GaintoInt32(Gains gain)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.Int32toGainInt32">
            <summary>Sets the shim of BridgeInput.Int32toGain(Int32 gain)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimBridgeInput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.BridgeMaxGet">
            <summary>Sets the shim of BridgeInput.get_BridgeMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.BridgeMinGet">
            <summary>Sets the shim of BridgeInput.get_BridgeMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.BridgeValueGet">
            <summary>Sets the shim of BridgeInput.get_BridgeValue()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.EnabledGet">
            <summary>Sets the shim of BridgeInput.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of BridgeInput.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.GainGet">
            <summary>Sets the shim of BridgeInput.get_Gain()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.GainSetBridgeInputGains">
            <summary>Sets the shim of BridgeInput.set_Gain(Gains value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.GaintoInt32BridgeInputGains">
            <summary>Sets the shim of BridgeInput.GaintoInt32(Gains gain)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInput.AllInstances.Int32toGainInt32">
            <summary>Sets the shim of BridgeInput.Int32toGain(Int32 gain)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimBridgeInputCollection">
            <summary>Shim type of Phidgets.BridgeInputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInputCollection.#ctor(Phidgets.BridgeInputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInputCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimBridgeInputCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.Clear">
            <summary>Sets the shim of BridgeInputCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.ConstructorBridge">
            <summary>Sets the shim of BridgeInputCollection.BridgeInputCollection(Bridge phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.Initialize">
            <summary>Sets the shim of BridgeInputCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.ItemGetInt32">
            <summary>Sets the shim of BridgeInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimBridgeInputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.AllInstances.Clear">
            <summary>Sets the shim of BridgeInputCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.AllInstances.Initialize">
            <summary>Sets the shim of BridgeInputCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimBridgeInputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of BridgeInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimDictionary">
            <summary>Shim type of Phidgets.Dictionary</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimDictionary.#ctor(Phidgets.Dictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AddressGet">
            <summary>Sets the shim of Dictionary.get_Address()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AttachedToServerGet">
            <summary>Sets the shim of Dictionary.get_AttachedToServer()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.Constructor">
            <summary>Sets the shim of Dictionary.Dictionary()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.ErrorAddErrorEventHandler">
            <summary>Sets the shim of Dictionary.add_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.ErrorRemoveErrorEventHandler">
            <summary>Sets the shim of Dictionary.remove_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.OnErrorErrorEventArgs">
            <summary>Sets the shim of Dictionary.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.OnServerConnectServerConnectEventArgs">
            <summary>Sets the shim of Dictionary.OnServerConnect(ServerConnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.OnServerDisconnectServerDisconnectEventArgs">
            <summary>Sets the shim of Dictionary.OnServerDisconnect(ServerDisconnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.PortGet">
            <summary>Sets the shim of Dictionary.get_Port()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.ServerConnectAddServerConnectEventHandler">
            <summary>Sets the shim of Dictionary.add_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.ServerConnectRemoveServerConnectEventHandler">
            <summary>Sets the shim of Dictionary.remove_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.ServerDisconnectAddServerDisconnectEventHandler">
            <summary>Sets the shim of Dictionary.add_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.ServerDisconnectRemoveServerDisconnectEventHandler">
            <summary>Sets the shim of Dictionary.remove_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.ServerIDGet">
            <summary>Sets the shim of Dictionary.get_ServerID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.addStringString">
            <summary>Sets the shim of Dictionary.add(String key, String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.addStringStringBoolean">
            <summary>Sets the shim of Dictionary.add(String key, String value, Boolean persistent)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.close">
            <summary>Sets the shim of Dictionary.close()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.getString">
            <summary>Sets the shim of Dictionary.get(String key)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.nativeErrorEventIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of Dictionary.nativeErrorEvent(IntPtr phidA, IntPtr userPtr, Int32 code, IntPtr error)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.nativeServerConnectEventIntPtrIntPtr">
            <summary>Sets the shim of Dictionary.nativeServerConnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.nativeServerDisconnectEventIntPtrIntPtr">
            <summary>Sets the shim of Dictionary.nativeServerDisconnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.openString">
            <summary>Sets the shim of Dictionary.open(String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.openStringInt32">
            <summary>Sets the shim of Dictionary.open(String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.openStringInt32String">
            <summary>Sets the shim of Dictionary.open(String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.openStringString">
            <summary>Sets the shim of Dictionary.open(String ServerID, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.removeString">
            <summary>Sets the shim of Dictionary.remove(String keypattern)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.AddressGet">
            <summary>Sets the shim of Dictionary.get_Address()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.AttachedToServerGet">
            <summary>Sets the shim of Dictionary.get_AttachedToServer()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.ErrorAddErrorEventHandler">
            <summary>Sets the shim of Dictionary.add_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.ErrorRemoveErrorEventHandler">
            <summary>Sets the shim of Dictionary.remove_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.OnErrorErrorEventArgs">
            <summary>Sets the shim of Dictionary.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.OnServerConnectServerConnectEventArgs">
            <summary>Sets the shim of Dictionary.OnServerConnect(ServerConnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.OnServerDisconnectServerDisconnectEventArgs">
            <summary>Sets the shim of Dictionary.OnServerDisconnect(ServerDisconnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.PortGet">
            <summary>Sets the shim of Dictionary.get_Port()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.ServerConnectAddServerConnectEventHandler">
            <summary>Sets the shim of Dictionary.add_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.ServerConnectRemoveServerConnectEventHandler">
            <summary>Sets the shim of Dictionary.remove_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.ServerDisconnectAddServerDisconnectEventHandler">
            <summary>Sets the shim of Dictionary.add_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.ServerDisconnectRemoveServerDisconnectEventHandler">
            <summary>Sets the shim of Dictionary.remove_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.ServerIDGet">
            <summary>Sets the shim of Dictionary.get_ServerID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.addStringString">
            <summary>Sets the shim of Dictionary.add(String key, String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.addStringStringBoolean">
            <summary>Sets the shim of Dictionary.add(String key, String value, Boolean persistent)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.close">
            <summary>Sets the shim of Dictionary.close()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.getString">
            <summary>Sets the shim of Dictionary.get(String key)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.nativeErrorEventIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of Dictionary.nativeErrorEvent(IntPtr phidA, IntPtr userPtr, Int32 code, IntPtr error)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.nativeServerConnectEventIntPtrIntPtr">
            <summary>Sets the shim of Dictionary.nativeServerConnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.nativeServerDisconnectEventIntPtrIntPtr">
            <summary>Sets the shim of Dictionary.nativeServerDisconnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.openString">
            <summary>Sets the shim of Dictionary.open(String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.openStringInt32">
            <summary>Sets the shim of Dictionary.open(String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.openStringInt32String">
            <summary>Sets the shim of Dictionary.open(String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.openStringString">
            <summary>Sets the shim of Dictionary.open(String ServerID, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimDictionary.AllInstances.removeString">
            <summary>Sets the shim of Dictionary.remove(String keypattern)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoder">
            <summary>Shim type of Phidgets.Encoder</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoder.#ctor(Phidgets.Encoder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Encoder.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.Constructor">
            <summary>Sets the shim of Encoder.Encoder()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Encoder.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of Encoder.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of Encoder.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of Encoder.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.OnPositionChangeEncoderPositionChangeEventArgs">
            <summary>Sets the shim of Encoder.OnPositionChange(EncoderPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.PositionChangeAddEncoderPositionChangeEventHandler">
            <summary>Sets the shim of Encoder.add_PositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.PositionChangeRemoveEncoderPositionChangeEventHandler">
            <summary>Sets the shim of Encoder.remove_PositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of Encoder.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.nativePositionChangeEventIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of Encoder.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 timestamp, Int32 position)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.setNativeEvents">
            <summary>Sets the shim of Encoder.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Encoder.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Encoder.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of Encoder.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of Encoder.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of Encoder.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.OnPositionChangeEncoderPositionChangeEventArgs">
            <summary>Sets the shim of Encoder.OnPositionChange(EncoderPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.PositionChangeAddEncoderPositionChangeEventHandler">
            <summary>Sets the shim of Encoder.add_PositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.PositionChangeRemoveEncoderPositionChangeEventHandler">
            <summary>Sets the shim of Encoder.remove_PositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of Encoder.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.nativePositionChangeEventIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of Encoder.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 timestamp, Int32 position)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoder.AllInstances.setNativeEvents">
            <summary>Sets the shim of Encoder.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderDigitalInputCollection">
            <summary>Shim type of Phidgets.EncoderDigitalInputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderDigitalInputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderDigitalInputCollection.#ctor(Phidgets.EncoderDigitalInputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderDigitalInputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderDigitalInputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderDigitalInputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderDigitalInputCollection.ConstructorEncoder">
            <summary>Sets the shim of EncoderDigitalInputCollection.EncoderDigitalInputCollection(Encoder phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderDigitalInputCollection.CountGet">
            <summary>Sets the shim of EncoderDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderDigitalInputCollection.ItemGetInt32">
            <summary>Sets the shim of EncoderDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderDigitalInputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderDigitalInputCollection.AllInstances.CountGet">
            <summary>Sets the shim of EncoderDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderDigitalInputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EncoderDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderEncoderCollection">
            <summary>Shim type of Phidgets.EncoderEncoderCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderCollection.#ctor(Phidgets.EncoderEncoderCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.ConstructorEncoder">
            <summary>Sets the shim of EncoderEncoderCollection.EncoderEncoderCollection(Encoder phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.CountGet">
            <summary>Sets the shim of EncoderEncoderCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.ItemGetInt32">
            <summary>Sets the shim of EncoderEncoderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.ItemSetInt32Int32">
            <summary>Sets the shim of EncoderEncoderCollection.set_Item(Int32 index, Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderEncoderCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.AllInstances.CountGet">
            <summary>Sets the shim of EncoderEncoderCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EncoderEncoderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderCollection.AllInstances.ItemSetInt32Int32">
            <summary>Sets the shim of EncoderEncoderCollection.set_Item(Int32 index, Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderEncoderWithEnable">
            <summary>Shim type of Phidgets.EncoderEncoderWithEnable</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnable.#ctor(Phidgets.EncoderEncoderWithEnable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.ConstructorIntPtrInt32">
            <summary>Sets the shim of EncoderEncoderWithEnable.EncoderEncoderWithEnable(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.EnabledGet">
            <summary>Sets the shim of EncoderEncoderWithEnable.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.EnabledSetBoolean">
            <summary>Sets the shim of EncoderEncoderWithEnable.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.IndexPositionGet">
            <summary>Sets the shim of EncoderEncoderWithEnable.get_IndexPosition()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.PositionGet">
            <summary>Sets the shim of EncoderEncoderWithEnable.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.PositionSetInt32">
            <summary>Sets the shim of EncoderEncoderWithEnable.set_Position(Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderEncoderWithEnable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.AllInstances.EnabledGet">
            <summary>Sets the shim of EncoderEncoderWithEnable.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of EncoderEncoderWithEnable.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.AllInstances.IndexPositionGet">
            <summary>Sets the shim of EncoderEncoderWithEnable.get_IndexPosition()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.AllInstances.PositionGet">
            <summary>Sets the shim of EncoderEncoderWithEnable.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnable.AllInstances.PositionSetInt32">
            <summary>Sets the shim of EncoderEncoderWithEnable.set_Position(Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection">
            <summary>Shim type of Phidgets.EncoderEncoderWithEnableCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.#ctor(Phidgets.EncoderEncoderWithEnableCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.Clear">
            <summary>Sets the shim of EncoderEncoderWithEnableCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.ConstructorEncoder">
            <summary>Sets the shim of EncoderEncoderWithEnableCollection.EncoderEncoderWithEnableCollection(Encoder phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.Initialize">
            <summary>Sets the shim of EncoderEncoderWithEnableCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.ItemGetInt32">
            <summary>Sets the shim of EncoderEncoderWithEnableCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.AllInstances.Clear">
            <summary>Sets the shim of EncoderEncoderWithEnableCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.AllInstances.Initialize">
            <summary>Sets the shim of EncoderEncoderWithEnableCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimEncoderEncoderWithEnableCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EncoderEncoderWithEnableCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimFrequencyCounter">
            <summary>Shim type of Phidgets.FrequencyCounter</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounter.#ctor(Phidgets.FrequencyCounter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of FrequencyCounter.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.Constructor">
            <summary>Sets the shim of FrequencyCounter.FrequencyCounter()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.CountAddFrequencyCounterCountEventHandler">
            <summary>Sets the shim of FrequencyCounter.add_Count(FrequencyCounterCountEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.CountRemoveFrequencyCounterCountEventHandler">
            <summary>Sets the shim of FrequencyCounter.remove_Count(FrequencyCounterCountEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of FrequencyCounter.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.OnCountFrequencyCounterCountEventArgs">
            <summary>Sets the shim of FrequencyCounter.OnCount(FrequencyCounterCountEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.nativeCountEventIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of FrequencyCounter.nativeCountEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 timestamp, Int32 counts)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.setNativeEvents">
            <summary>Sets the shim of FrequencyCounter.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimFrequencyCounter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of FrequencyCounter.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AllInstances.CountAddFrequencyCounterCountEventHandler">
            <summary>Sets the shim of FrequencyCounter.add_Count(FrequencyCounterCountEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AllInstances.CountRemoveFrequencyCounterCountEventHandler">
            <summary>Sets the shim of FrequencyCounter.remove_Count(FrequencyCounterCountEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of FrequencyCounter.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AllInstances.OnCountFrequencyCounterCountEventArgs">
            <summary>Sets the shim of FrequencyCounter.OnCount(FrequencyCounterCountEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AllInstances.nativeCountEventIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of FrequencyCounter.nativeCountEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 timestamp, Int32 counts)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounter.AllInstances.setNativeEvents">
            <summary>Sets the shim of FrequencyCounter.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimFrequencyCounterInput">
            <summary>Shim type of Phidgets.FrequencyCounterInput</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInput.#ctor(Phidgets.FrequencyCounterInput)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.ConstructorIntPtrInt32">
            <summary>Sets the shim of FrequencyCounterInput.FrequencyCounterInput(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.EnabledGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.EnabledSetBoolean">
            <summary>Sets the shim of FrequencyCounterInput.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.FilterGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Filter()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.FilterSetFrequencyCounterInputFilterType">
            <summary>Sets the shim of FrequencyCounterInput.set_Filter(FilterType value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.FilterTypetoInt32FrequencyCounterInputFilterType">
            <summary>Sets the shim of FrequencyCounterInput.FilterTypetoInt32(FilterType type)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.FrequencyGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Frequency()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.Int32toFilterTypeInt32">
            <summary>Sets the shim of FrequencyCounterInput.Int32toFilterType(Int32 type)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.TimeoutGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Timeout()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.TimeoutSetInt32">
            <summary>Sets the shim of FrequencyCounterInput.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.TotalCountGet">
            <summary>Sets the shim of FrequencyCounterInput.get_TotalCount()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.TotalTimeGet">
            <summary>Sets the shim of FrequencyCounterInput.get_TotalTime()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.reset">
            <summary>Sets the shim of FrequencyCounterInput.reset()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.EnabledGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Enabled()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of FrequencyCounterInput.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.FilterGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Filter()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.FilterSetFrequencyCounterInputFilterType">
            <summary>Sets the shim of FrequencyCounterInput.set_Filter(FilterType value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.FilterTypetoInt32FrequencyCounterInputFilterType">
            <summary>Sets the shim of FrequencyCounterInput.FilterTypetoInt32(FilterType type)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.FrequencyGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Frequency()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.Int32toFilterTypeInt32">
            <summary>Sets the shim of FrequencyCounterInput.Int32toFilterType(Int32 type)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.TimeoutGet">
            <summary>Sets the shim of FrequencyCounterInput.get_Timeout()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.TimeoutSetInt32">
            <summary>Sets the shim of FrequencyCounterInput.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.TotalCountGet">
            <summary>Sets the shim of FrequencyCounterInput.get_TotalCount()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.TotalTimeGet">
            <summary>Sets the shim of FrequencyCounterInput.get_TotalTime()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInput.AllInstances.reset">
            <summary>Sets the shim of FrequencyCounterInput.reset()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimFrequencyCounterInputCollection">
            <summary>Shim type of Phidgets.FrequencyCounterInputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInputCollection.#ctor(Phidgets.FrequencyCounterInputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInputCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimFrequencyCounterInputCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.Clear">
            <summary>Sets the shim of FrequencyCounterInputCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.ConstructorFrequencyCounter">
            <summary>Sets the shim of FrequencyCounterInputCollection.FrequencyCounterInputCollection(FrequencyCounter phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.Initialize">
            <summary>Sets the shim of FrequencyCounterInputCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.ItemGetInt32">
            <summary>Sets the shim of FrequencyCounterInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimFrequencyCounterInputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.AllInstances.Clear">
            <summary>Sets the shim of FrequencyCounterInputCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.AllInstances.Initialize">
            <summary>Sets the shim of FrequencyCounterInputCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimFrequencyCounterInputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of FrequencyCounterInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimGPS">
            <summary>Shim type of Phidgets.GPS</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimGPS.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimGPS.#ctor(Phidgets.GPS)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimGPS.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimGPS.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AltitudeGet">
            <summary>Sets the shim of GPS.get_Altitude()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of GPS.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.Constructor">
            <summary>Sets the shim of GPS.GPS()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.GPSDateAndTimeGet">
            <summary>Sets the shim of GPS.get_GPSDateAndTime()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.HeadingGet">
            <summary>Sets the shim of GPS.get_Heading()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.LatitudeGet">
            <summary>Sets the shim of GPS.get_Latitude()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.LongitudeGet">
            <summary>Sets the shim of GPS.get_Longitude()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.OnPositionChangeGPSPositionChangeEventArgs">
            <summary>Sets the shim of GPS.OnPositionChange(GPSPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.OnPositionFixStatusChangeGPSPositionFixStatusChangeEventArgs">
            <summary>Sets the shim of GPS.OnPositionFixStatusChange(GPSPositionFixStatusChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.PositionChangeAddGPSPositionChangeEventHandler">
            <summary>Sets the shim of GPS.add_PositionChange(GPSPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.PositionChangeRemoveGPSPositionChangeEventHandler">
            <summary>Sets the shim of GPS.remove_PositionChange(GPSPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.PositionFixStatusChangeAddGPSPositionFixStatusChangeEventHandler">
            <summary>Sets the shim of GPS.add_PositionFixStatusChange(GPSPositionFixStatusChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.PositionFixStatusChangeRemoveGPSPositionFixStatusChangeEventHandler">
            <summary>Sets the shim of GPS.remove_PositionFixStatusChange(GPSPositionFixStatusChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.PositionFixStatusGet">
            <summary>Sets the shim of GPS.get_PositionFixStatus()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.VelocityGet">
            <summary>Sets the shim of GPS.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.nativePositionChangeEventIntPtrIntPtrDoubleDoubleDouble">
            <summary>Sets the shim of GPS.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Double latitude, Double longitude, Double altitude)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.nativePositionFixStatusChangeEventIntPtrIntPtrInt32">
            <summary>Sets the shim of GPS.nativePositionFixStatusChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 status)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.setNativeEvents">
            <summary>Sets the shim of GPS.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimGPS.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.AltitudeGet">
            <summary>Sets the shim of GPS.get_Altitude()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of GPS.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.GPSDateAndTimeGet">
            <summary>Sets the shim of GPS.get_GPSDateAndTime()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.HeadingGet">
            <summary>Sets the shim of GPS.get_Heading()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.LatitudeGet">
            <summary>Sets the shim of GPS.get_Latitude()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.LongitudeGet">
            <summary>Sets the shim of GPS.get_Longitude()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.OnPositionChangeGPSPositionChangeEventArgs">
            <summary>Sets the shim of GPS.OnPositionChange(GPSPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.OnPositionFixStatusChangeGPSPositionFixStatusChangeEventArgs">
            <summary>Sets the shim of GPS.OnPositionFixStatusChange(GPSPositionFixStatusChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.PositionChangeAddGPSPositionChangeEventHandler">
            <summary>Sets the shim of GPS.add_PositionChange(GPSPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.PositionChangeRemoveGPSPositionChangeEventHandler">
            <summary>Sets the shim of GPS.remove_PositionChange(GPSPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.PositionFixStatusChangeAddGPSPositionFixStatusChangeEventHandler">
            <summary>Sets the shim of GPS.add_PositionFixStatusChange(GPSPositionFixStatusChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.PositionFixStatusChangeRemoveGPSPositionFixStatusChangeEventHandler">
            <summary>Sets the shim of GPS.remove_PositionFixStatusChange(GPSPositionFixStatusChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.PositionFixStatusGet">
            <summary>Sets the shim of GPS.get_PositionFixStatus()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.VelocityGet">
            <summary>Sets the shim of GPS.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.nativePositionChangeEventIntPtrIntPtrDoubleDoubleDouble">
            <summary>Sets the shim of GPS.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Double latitude, Double longitude, Double altitude)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.nativePositionFixStatusChangeEventIntPtrIntPtrInt32">
            <summary>Sets the shim of GPS.nativePositionFixStatusChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 status)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimGPS.AllInstances.setNativeEvents">
            <summary>Sets the shim of GPS.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIR">
            <summary>Shim type of Phidgets.IR</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIR.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIR.#ctor(Phidgets.IR)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIR.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIR.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of IR.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.CodeAddIRCodeEventHandler">
            <summary>Sets the shim of IR.add_Code(IRCodeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.CodeRemoveIRCodeEventHandler">
            <summary>Sets the shim of IR.remove_Code(IRCodeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.Constructor">
            <summary>Sets the shim of IR.IR()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.HexToDataString">
            <summary>Sets the shim of IR.HexToData(String hexString)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.LastCodeGet">
            <summary>Sets the shim of IR.get_LastCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.LastLearnedCodeGet">
            <summary>Sets the shim of IR.get_LastLearnedCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.LearnAddIRLearnEventHandler">
            <summary>Sets the shim of IR.add_Learn(IRLearnEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.LearnRemoveIRLearnEventHandler">
            <summary>Sets the shim of IR.remove_Learn(IRLearnEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.OnIRCodeIRCodeEventArgs">
            <summary>Sets the shim of IR.OnIRCode(IRCodeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.OnIRLearnIRLearnEventArgs">
            <summary>Sets the shim of IR.OnIRLearn(IRLearnEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.OnIRRawDataIRRawDataEventArgs">
            <summary>Sets the shim of IR.OnIRRawData(IRRawDataEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.RawDataAddIRRawDataEventHandler">
            <summary>Sets the shim of IR.add_RawData(IRRawDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.RawDataRemoveIRRawDataEventHandler">
            <summary>Sets the shim of IR.remove_RawData(IRRawDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.StaticConstructor">
            <summary>Sets the shim of IR.IR()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.nativeIRCodeEventIntPtrIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of IR.nativeIRCodeEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 dataLength, Int32 bitCount, Int32 repeat)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.nativeIRLearnEventIntPtrIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of IR.nativeIRLearnEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 length, IntPtr codeInfoPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.nativeIRRawDataEventIntPtrIntPtrIntPtrInt32">
            <summary>Sets the shim of IR.nativeIRRawDataEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 length)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.readRawInt32Array">
            <summary>Sets the shim of IR.readRaw(Int32[] buffer)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.readRawInt32ArrayInt32Int32">
            <summary>Sets the shim of IR.readRaw(Int32[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.setNativeEvents">
            <summary>Sets the shim of IR.setNativeEvents()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.transmitIRCodeIRCodeInfo">
            <summary>Sets the shim of IR.transmit(IRCode code, IRCodeInfo codeInfo)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.transmitRawInt32Array">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.transmitRawInt32ArrayInt32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 gap)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.transmitRawInt32ArrayInt32Int32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.transmitRawInt32ArrayInt32Int32Int32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 offset, Int32 count, Int32 gap)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.transmitRawInt32ArrayInt32Int32Int32Int32Int32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 offset, Int32 count, Int32 gap, Int32 carrierFrequency, Int32 dutyCycle)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.transmitRepeat">
            <summary>Sets the shim of IR.transmitRepeat()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIR.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of IR.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.CodeAddIRCodeEventHandler">
            <summary>Sets the shim of IR.add_Code(IRCodeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.CodeRemoveIRCodeEventHandler">
            <summary>Sets the shim of IR.remove_Code(IRCodeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.LastCodeGet">
            <summary>Sets the shim of IR.get_LastCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.LastLearnedCodeGet">
            <summary>Sets the shim of IR.get_LastLearnedCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.LearnAddIRLearnEventHandler">
            <summary>Sets the shim of IR.add_Learn(IRLearnEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.LearnRemoveIRLearnEventHandler">
            <summary>Sets the shim of IR.remove_Learn(IRLearnEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.OnIRCodeIRCodeEventArgs">
            <summary>Sets the shim of IR.OnIRCode(IRCodeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.OnIRLearnIRLearnEventArgs">
            <summary>Sets the shim of IR.OnIRLearn(IRLearnEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.OnIRRawDataIRRawDataEventArgs">
            <summary>Sets the shim of IR.OnIRRawData(IRRawDataEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.RawDataAddIRRawDataEventHandler">
            <summary>Sets the shim of IR.add_RawData(IRRawDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.RawDataRemoveIRRawDataEventHandler">
            <summary>Sets the shim of IR.remove_RawData(IRRawDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.nativeIRCodeEventIntPtrIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of IR.nativeIRCodeEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 dataLength, Int32 bitCount, Int32 repeat)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.nativeIRLearnEventIntPtrIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of IR.nativeIRLearnEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 length, IntPtr codeInfoPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.nativeIRRawDataEventIntPtrIntPtrIntPtrInt32">
            <summary>Sets the shim of IR.nativeIRRawDataEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 length)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.readRawInt32Array">
            <summary>Sets the shim of IR.readRaw(Int32[] buffer)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.readRawInt32ArrayInt32Int32">
            <summary>Sets the shim of IR.readRaw(Int32[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.setNativeEvents">
            <summary>Sets the shim of IR.setNativeEvents()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.transmitIRCodeIRCodeInfo">
            <summary>Sets the shim of IR.transmit(IRCode code, IRCodeInfo codeInfo)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.transmitRawInt32Array">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.transmitRawInt32ArrayInt32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 gap)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.transmitRawInt32ArrayInt32Int32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.transmitRawInt32ArrayInt32Int32Int32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 offset, Int32 count, Int32 gap)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.transmitRawInt32ArrayInt32Int32Int32Int32Int32">
            <summary>Sets the shim of IR.transmitRaw(Int32[] data, Int32 offset, Int32 count, Int32 gap, Int32 carrierFrequency, Int32 dutyCycle)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIR.AllInstances.transmitRepeat">
            <summary>Sets the shim of IR.transmitRepeat()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIRCode">
            <summary>Shim type of Phidgets.IRCode</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCode.#ctor(Phidgets.IRCode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCode.ConstructorByteArrayInt32">
            <summary>Sets the shim of IRCode.IRCode(Byte[] data, Int32 bitCount)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCode.ConstructorStringInt32">
            <summary>Sets the shim of IRCode.IRCode(String code, Int32 bitCount)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCode.ToString">
            <summary>Sets the shim of IRCode.ToString()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIRCode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCode.AllInstances.ToString01">
            <summary>Sets the shim of IRCode.ToString()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIRCodeInfo">
            <summary>Shim type of Phidgets.IRCodeInfo</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCodeInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCodeInfo.#ctor(Phidgets.IRCodeInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCodeInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRCodeInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.ConstructorIRCodeInfoIREncodingInt32">
            <summary>Sets the shim of IRCodeInfo.IRCodeInfo(IREncoding encoding, Int32 bitCount)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.ConstructorIRCodeInfoIREncodingInt32Int32ArrayInt32ArrayInt32ArrayInt32Int32">
            <summary>Sets the shim of IRCodeInfo.IRCodeInfo(IREncoding encoding, Int32 bitCount, Int32[] header, Int32[] zero, Int32[] one, Int32 trail, Int32 gap)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.ConstructorIRCodeInfoIREncodingInt32Int32ArrayInt32ArrayInt32ArrayInt32Int32Int32Array">
            <summary>Sets the shim of IRCodeInfo.IRCodeInfo(IREncoding encoding, Int32 bitCount, Int32[] header, Int32[] zero, Int32[] one, Int32 trail, Int32 gap, Int32[] repeat)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.ConstructorIRCodeInfoIREncodingInt32Int32ArrayInt32ArrayInt32ArrayInt32Int32Int32ArrayInt32ByteArrayIRCodeInfoIRCodeLengthInt32Int32">
            <summary>Sets the shim of IRCodeInfo.IRCodeInfo(IREncoding encoding, Int32 bitCount, Int32[] header, Int32[] zero, Int32[] one, Int32 trail, Int32 gap, Int32[] repeat, Int32 minRepeat, Byte[] toggleMask, IRCodeLength length, Int32 carrierFrequency, Int32 dutyCycle)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.ConstructorInt32">
            <summary>Sets the shim of IRCodeInfo.IRCodeInfo(Int32 bitCount)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.IRCodeLengthtoInt32IRCodeInfoIRCodeLength">
            <summary>Sets the shim of IRCodeInfo.IRCodeLengthtoInt32(IRCodeLength level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.IREncodingtoInt32IRCodeInfoIREncoding">
            <summary>Sets the shim of IRCodeInfo.IREncodingtoInt32(IREncoding level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.Int32toIRCodeLengthInt32">
            <summary>Sets the shim of IRCodeInfo.Int32toIRCodeLength(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.Int32toIREncodingInt32">
            <summary>Sets the shim of IRCodeInfo.Int32toIREncoding(Int32 level)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIRCodeInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.AllInstances.IRCodeLengthtoInt32IRCodeInfoIRCodeLength">
            <summary>Sets the shim of IRCodeInfo.IRCodeLengthtoInt32(IRCodeLength level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.AllInstances.IREncodingtoInt32IRCodeInfoIREncoding">
            <summary>Sets the shim of IRCodeInfo.IREncodingtoInt32(IREncoding level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.AllInstances.Int32toIRCodeLengthInt32">
            <summary>Sets the shim of IRCodeInfo.Int32toIRCodeLength(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRCodeInfo.AllInstances.Int32toIREncodingInt32">
            <summary>Sets the shim of IRCodeInfo.Int32toIREncoding(Int32 level)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIRLearnedCode">
            <summary>Shim type of Phidgets.IRLearnedCode</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRLearnedCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRLearnedCode.#ctor(Phidgets.IRLearnedCode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRLearnedCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimIRLearnedCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRLearnedCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimIRLearnedCode.ConstructorIRCodeIRCodeInfo">
            <summary>Sets the shim of IRLearnedCode.IRLearnedCode(IRCode code, IRCodeInfo codeInfo)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimIRLearnedCode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKit">
            <summary>Shim type of Phidgets.InterfaceKit</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKit.#ctor(Phidgets.InterfaceKit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of InterfaceKit.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.Constructor">
            <summary>Sets the shim of InterfaceKit.InterfaceKit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of InterfaceKit.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of InterfaceKit.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.OnOutputChangeOutputChangeEventArgs">
            <summary>Sets the shim of InterfaceKit.OnOutputChange(OutputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.OnSensorChangeSensorChangeEventArgs">
            <summary>Sets the shim of InterfaceKit.OnSensorChange(SensorChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.OutputChangeAddOutputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.add_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.OutputChangeRemoveOutputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.remove_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.SensorChangeAddSensorChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.add_SensorChange(SensorChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.SensorChangeRemoveSensorChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.remove_SensorChange(SensorChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of InterfaceKit.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.nativeOutputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of InterfaceKit.nativeOutputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.nativeSensorChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of InterfaceKit.nativeSensorChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.ratiometricGet">
            <summary>Sets the shim of InterfaceKit.get_ratiometric()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.ratiometricSetBoolean">
            <summary>Sets the shim of InterfaceKit.set_ratiometric(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.setNativeEvents">
            <summary>Sets the shim of InterfaceKit.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of InterfaceKit.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of InterfaceKit.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of InterfaceKit.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.OnOutputChangeOutputChangeEventArgs">
            <summary>Sets the shim of InterfaceKit.OnOutputChange(OutputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.OnSensorChangeSensorChangeEventArgs">
            <summary>Sets the shim of InterfaceKit.OnSensorChange(SensorChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.OutputChangeAddOutputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.add_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.OutputChangeRemoveOutputChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.remove_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.SensorChangeAddSensorChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.add_SensorChange(SensorChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.SensorChangeRemoveSensorChangeEventHandler">
            <summary>Sets the shim of InterfaceKit.remove_SensorChange(SensorChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of InterfaceKit.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.nativeOutputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of InterfaceKit.nativeOutputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.nativeSensorChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of InterfaceKit.nativeSensorChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.ratiometricGet">
            <summary>Sets the shim of InterfaceKit.get_ratiometric()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.ratiometricSetBoolean">
            <summary>Sets the shim of InterfaceKit.set_ratiometric(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKit.AllInstances.setNativeEvents">
            <summary>Sets the shim of InterfaceKit.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitAnalogSensor">
            <summary>Shim type of Phidgets.InterfaceKitAnalogSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.#ctor(Phidgets.InterfaceKitAnalogSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.ConstructorIntPtrInt32">
            <summary>Sets the shim of InterfaceKitAnalogSensor.InterfaceKitAnalogSensor(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.DataRateGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_DataRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.DataRateMaxGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_DataRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.DataRateMinGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_DataRateMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.DataRateSetInt32">
            <summary>Sets the shim of InterfaceKitAnalogSensor.set_DataRate(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.RawValueGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_RawValue()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.SensitivityGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.SensitivitySetInt32">
            <summary>Sets the shim of InterfaceKitAnalogSensor.set_Sensitivity(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.ValueGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_Value()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.DataRateGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_DataRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.DataRateMaxGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_DataRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.DataRateMinGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_DataRateMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.DataRateSetInt32">
            <summary>Sets the shim of InterfaceKitAnalogSensor.set_DataRate(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.RawValueGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_RawValue()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.SensitivityGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.SensitivitySetInt32">
            <summary>Sets the shim of InterfaceKitAnalogSensor.set_Sensitivity(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensor.AllInstances.ValueGet">
            <summary>Sets the shim of InterfaceKitAnalogSensor.get_Value()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection">
            <summary>Shim type of Phidgets.InterfaceKitAnalogSensorCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.#ctor(Phidgets.InterfaceKitAnalogSensorCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.Clear">
            <summary>Sets the shim of InterfaceKitAnalogSensorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.ConstructorInterfaceKit">
            <summary>Sets the shim of InterfaceKitAnalogSensorCollection.InterfaceKitAnalogSensorCollection(InterfaceKit phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.Initialize">
            <summary>Sets the shim of InterfaceKitAnalogSensorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.ItemGetInt32">
            <summary>Sets the shim of InterfaceKitAnalogSensorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.AllInstances.Clear">
            <summary>Sets the shim of InterfaceKitAnalogSensorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.AllInstances.Initialize">
            <summary>Sets the shim of InterfaceKitAnalogSensorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitAnalogSensorCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of InterfaceKitAnalogSensorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection">
            <summary>Shim type of Phidgets.InterfaceKitDigitalInputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.#ctor(Phidgets.InterfaceKitDigitalInputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.ConstructorInterfaceKit">
            <summary>Sets the shim of InterfaceKitDigitalInputCollection.InterfaceKitDigitalInputCollection(InterfaceKit phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.CountGet">
            <summary>Sets the shim of InterfaceKitDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.ItemGetInt32">
            <summary>Sets the shim of InterfaceKitDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.AllInstances.CountGet">
            <summary>Sets the shim of InterfaceKitDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalInputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of InterfaceKitDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection">
            <summary>Shim type of Phidgets.InterfaceKitDigitalOutputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.#ctor(Phidgets.InterfaceKitDigitalOutputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.ConstructorInterfaceKit">
            <summary>Sets the shim of InterfaceKitDigitalOutputCollection.InterfaceKitDigitalOutputCollection(InterfaceKit phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.CountGet">
            <summary>Sets the shim of InterfaceKitDigitalOutputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.ItemGetInt32">
            <summary>Sets the shim of InterfaceKitDigitalOutputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.ItemSetInt32Boolean">
            <summary>Sets the shim of InterfaceKitDigitalOutputCollection.set_Item(Int32 index, Boolean value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.AllInstances.CountGet">
            <summary>Sets the shim of InterfaceKitDigitalOutputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of InterfaceKitDigitalOutputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimInterfaceKitDigitalOutputCollection.AllInstances.ItemSetInt32Boolean">
            <summary>Sets the shim of InterfaceKitDigitalOutputCollection.set_Item(Int32 index, Boolean value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimKeyListener">
            <summary>Shim type of Phidgets.KeyListener</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimKeyListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimKeyListener.#ctor(Phidgets.KeyListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimKeyListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimKeyListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.ConstructorDictionaryString">
            <summary>Sets the shim of KeyListener.KeyListener(Dictionary Dict, String KeyPattern)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.KeyChangeAddKeyEventHandler">
            <summary>Sets the shim of KeyListener.add_KeyChange(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.KeyChangeRemoveKeyEventHandler">
            <summary>Sets the shim of KeyListener.remove_KeyChange(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.KeyRemovalAddKeyEventHandler">
            <summary>Sets the shim of KeyListener.add_KeyRemoval(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.KeyRemovalRemoveKeyEventHandler">
            <summary>Sets the shim of KeyListener.remove_KeyRemoval(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.OnKeyChangeKeyEventArgs">
            <summary>Sets the shim of KeyListener.OnKeyChange(KeyEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.OnKeyRemovalKeyEventArgs">
            <summary>Sets the shim of KeyListener.OnKeyRemoval(KeyEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.nativeKeyEventIntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the shim of KeyListener.nativeKeyEvent(IntPtr dict, IntPtr userPtr, IntPtr key, IntPtr val, Int32 reason)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.start">
            <summary>Sets the shim of KeyListener.start()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.stop">
            <summary>Sets the shim of KeyListener.stop()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimKeyListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.KeyChangeAddKeyEventHandler">
            <summary>Sets the shim of KeyListener.add_KeyChange(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.KeyChangeRemoveKeyEventHandler">
            <summary>Sets the shim of KeyListener.remove_KeyChange(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.KeyRemovalAddKeyEventHandler">
            <summary>Sets the shim of KeyListener.add_KeyRemoval(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.KeyRemovalRemoveKeyEventHandler">
            <summary>Sets the shim of KeyListener.remove_KeyRemoval(KeyEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.OnKeyChangeKeyEventArgs">
            <summary>Sets the shim of KeyListener.OnKeyChange(KeyEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.OnKeyRemovalKeyEventArgs">
            <summary>Sets the shim of KeyListener.OnKeyRemoval(KeyEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.nativeKeyEventIntPtrIntPtrIntPtrIntPtrInt32">
            <summary>Sets the shim of KeyListener.nativeKeyEvent(IntPtr dict, IntPtr userPtr, IntPtr key, IntPtr val, Int32 reason)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.start">
            <summary>Sets the shim of KeyListener.start()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimKeyListener.AllInstances.stop">
            <summary>Sets the shim of KeyListener.stop()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimLED">
            <summary>Shim type of Phidgets.LED</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLED.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLED.#ctor(Phidgets.LED)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLED.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLED.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of LED.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.Constructor">
            <summary>Sets the shim of LED.LED()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.CurrentLimitGet">
            <summary>Sets the shim of LED.get_CurrentLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.CurrentLimitSetLEDLEDCurrentLimit">
            <summary>Sets the shim of LED.set_CurrentLimit(LEDCurrentLimit value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.Int32toLEDCurrentLimitInt32">
            <summary>Sets the shim of LED.Int32toLEDCurrentLimit(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.Int32toLEDVoltageInt32">
            <summary>Sets the shim of LED.Int32toLEDVoltage(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.LEDCurrentLimittoInt32LEDLEDCurrentLimit">
            <summary>Sets the shim of LED.LEDCurrentLimittoInt32(LEDCurrentLimit level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.LEDVoltagetoInt32LEDLEDVoltage">
            <summary>Sets the shim of LED.LEDVoltagetoInt32(LEDVoltage level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.VoltageGet">
            <summary>Sets the shim of LED.get_Voltage()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.VoltageSetLEDLEDVoltage">
            <summary>Sets the shim of LED.set_Voltage(LEDVoltage value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimLED.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of LED.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.CurrentLimitGet">
            <summary>Sets the shim of LED.get_CurrentLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.CurrentLimitSetLEDLEDCurrentLimit">
            <summary>Sets the shim of LED.set_CurrentLimit(LEDCurrentLimit value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.Int32toLEDCurrentLimitInt32">
            <summary>Sets the shim of LED.Int32toLEDCurrentLimit(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.Int32toLEDVoltageInt32">
            <summary>Sets the shim of LED.Int32toLEDVoltage(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.LEDCurrentLimittoInt32LEDLEDCurrentLimit">
            <summary>Sets the shim of LED.LEDCurrentLimittoInt32(LEDCurrentLimit level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.LEDVoltagetoInt32LEDLEDVoltage">
            <summary>Sets the shim of LED.LEDVoltagetoInt32(LEDVoltage level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.VoltageGet">
            <summary>Sets the shim of LED.get_Voltage()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLED.AllInstances.VoltageSetLEDLEDVoltage">
            <summary>Sets the shim of LED.set_Voltage(LEDVoltage value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimLEDLEDCollection">
            <summary>Shim type of Phidgets.LEDLEDCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLEDLEDCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLEDLEDCollection.#ctor(Phidgets.LEDLEDCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLEDLEDCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimLEDLEDCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.ConstructorLED">
            <summary>Sets the shim of LEDLEDCollection.LEDLEDCollection(LED phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.CountGet">
            <summary>Sets the shim of LEDLEDCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.ItemGetInt32">
            <summary>Sets the shim of LEDLEDCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.ItemSetInt32Int32">
            <summary>Sets the shim of LEDLEDCollection.set_Item(Int32 index, Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimLEDLEDCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.AllInstances.CountGet">
            <summary>Sets the shim of LEDLEDCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of LEDLEDCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimLEDLEDCollection.AllInstances.ItemSetInt32Int32">
            <summary>Sets the shim of LEDLEDCollection.set_Item(Int32 index, Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimManager">
            <summary>Shim type of Phidgets.Manager</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimManager.#ctor(Phidgets.Manager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AddressGet">
            <summary>Sets the shim of Manager.get_Address()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AttachAddAttachEventHandler">
            <summary>Sets the shim of Manager.add_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AttachRemoveAttachEventHandler">
            <summary>Sets the shim of Manager.remove_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AttachedToServerGet">
            <summary>Sets the shim of Manager.get_AttachedToServer()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.Constructor">
            <summary>Sets the shim of Manager.Manager()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.DetachAddDetachEventHandler">
            <summary>Sets the shim of Manager.add_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.DetachRemoveDetachEventHandler">
            <summary>Sets the shim of Manager.remove_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.DevicesGet">
            <summary>Sets the shim of Manager.get_Devices()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.ErrorAddErrorEventHandler">
            <summary>Sets the shim of Manager.add_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.ErrorRemoveErrorEventHandler">
            <summary>Sets the shim of Manager.remove_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.OnAttachAttachEventArgs">
            <summary>Sets the shim of Manager.OnAttach(AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.OnDetachDetachEventArgs">
            <summary>Sets the shim of Manager.OnDetach(DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.OnErrorErrorEventArgs">
            <summary>Sets the shim of Manager.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.OnServerConnectServerConnectEventArgs">
            <summary>Sets the shim of Manager.OnServerConnect(ServerConnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.OnServerDisconnectServerDisconnectEventArgs">
            <summary>Sets the shim of Manager.OnServerDisconnect(ServerDisconnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.PortGet">
            <summary>Sets the shim of Manager.get_Port()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.ServerConnectAddServerConnectEventHandler">
            <summary>Sets the shim of Manager.add_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.ServerConnectRemoveServerConnectEventHandler">
            <summary>Sets the shim of Manager.remove_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.ServerDisconnectAddServerDisconnectEventHandler">
            <summary>Sets the shim of Manager.add_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.ServerDisconnectRemoveServerDisconnectEventHandler">
            <summary>Sets the shim of Manager.remove_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.ServerIDGet">
            <summary>Sets the shim of Manager.get_ServerID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.close">
            <summary>Sets the shim of Manager.close()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.createTypedPhidPhidget">
            <summary>Sets the shim of Manager.createTypedPhid(Phidget phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.nativeAttachEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeAttachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.nativeDetachEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeDetachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.nativeErrorEventIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of Manager.nativeErrorEvent(IntPtr phidA, IntPtr userPtr, Int32 code, IntPtr error)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.nativeServerConnectEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeServerConnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.nativeServerDisconnectEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeServerDisconnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.open">
            <summary>Sets the shim of Manager.open()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.openString">
            <summary>Sets the shim of Manager.open(String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.openStringInt32">
            <summary>Sets the shim of Manager.open(String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.openStringInt32String">
            <summary>Sets the shim of Manager.open(String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.openStringString">
            <summary>Sets the shim of Manager.open(String ServerID, String password)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.AddressGet">
            <summary>Sets the shim of Manager.get_Address()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.AttachAddAttachEventHandler">
            <summary>Sets the shim of Manager.add_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.AttachRemoveAttachEventHandler">
            <summary>Sets the shim of Manager.remove_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.AttachedToServerGet">
            <summary>Sets the shim of Manager.get_AttachedToServer()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.DetachAddDetachEventHandler">
            <summary>Sets the shim of Manager.add_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.DetachRemoveDetachEventHandler">
            <summary>Sets the shim of Manager.remove_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.DevicesGet">
            <summary>Sets the shim of Manager.get_Devices()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.ErrorAddErrorEventHandler">
            <summary>Sets the shim of Manager.add_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.ErrorRemoveErrorEventHandler">
            <summary>Sets the shim of Manager.remove_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.OnAttachAttachEventArgs">
            <summary>Sets the shim of Manager.OnAttach(AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.OnDetachDetachEventArgs">
            <summary>Sets the shim of Manager.OnDetach(DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.OnErrorErrorEventArgs">
            <summary>Sets the shim of Manager.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.OnServerConnectServerConnectEventArgs">
            <summary>Sets the shim of Manager.OnServerConnect(ServerConnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.OnServerDisconnectServerDisconnectEventArgs">
            <summary>Sets the shim of Manager.OnServerDisconnect(ServerDisconnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.PortGet">
            <summary>Sets the shim of Manager.get_Port()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.ServerConnectAddServerConnectEventHandler">
            <summary>Sets the shim of Manager.add_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.ServerConnectRemoveServerConnectEventHandler">
            <summary>Sets the shim of Manager.remove_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.ServerDisconnectAddServerDisconnectEventHandler">
            <summary>Sets the shim of Manager.add_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.ServerDisconnectRemoveServerDisconnectEventHandler">
            <summary>Sets the shim of Manager.remove_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.ServerIDGet">
            <summary>Sets the shim of Manager.get_ServerID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.close">
            <summary>Sets the shim of Manager.close()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.createTypedPhidPhidget">
            <summary>Sets the shim of Manager.createTypedPhid(Phidget phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.nativeAttachEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeAttachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.nativeDetachEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeDetachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.nativeErrorEventIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of Manager.nativeErrorEvent(IntPtr phidA, IntPtr userPtr, Int32 code, IntPtr error)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.nativeServerConnectEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeServerConnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.nativeServerDisconnectEventIntPtrIntPtr">
            <summary>Sets the shim of Manager.nativeServerDisconnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.open">
            <summary>Sets the shim of Manager.open()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.openString">
            <summary>Sets the shim of Manager.open(String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.openStringInt32">
            <summary>Sets the shim of Manager.open(String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.openStringInt32String">
            <summary>Sets the shim of Manager.open(String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimManager.AllInstances.openStringString">
            <summary>Sets the shim of Manager.open(String ServerID, String password)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControl">
            <summary>Shim type of Phidgets.MotorControl</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControl.#ctor(Phidgets.MotorControl)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of MotorControl.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.BackEMFUpdateAddBackEMFUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_BackEMFUpdate(BackEMFUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.BackEMFUpdateRemoveBackEMFUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_BackEMFUpdate(BackEMFUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.Constructor">
            <summary>Sets the shim of MotorControl.MotorControl()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.CurrentChangeAddCurrentChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.CurrentChangeRemoveCurrentChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.CurrentUpdateAddCurrentUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_CurrentUpdate(CurrentUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.CurrentUpdateRemoveCurrentUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_CurrentUpdate(CurrentUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of MotorControl.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.EncoderPositionChangeAddEncoderPositionChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_EncoderPositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.EncoderPositionChangeRemoveEncoderPositionChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_EncoderPositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.EncoderPositionUpdateAddEncoderPositionUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_EncoderPositionUpdate(EncoderPositionUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.EncoderPositionUpdateRemoveEncoderPositionUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_EncoderPositionUpdate(EncoderPositionUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnBackEMFUpdateBackEMFUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnBackEMFUpdate(BackEMFUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnCurrentChangeCurrentChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnCurrentChange(CurrentChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnCurrentUpdateCurrentUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnCurrentUpdate(CurrentUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnEncoderPositionChangeEncoderPositionChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnEncoderPositionChange(EncoderPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnEncoderPositionUpdateEncoderPositionUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnEncoderPositionUpdate(EncoderPositionUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnSensorUpdateSensorUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnSensorUpdate(SensorUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.OnVelocityChangeVelocityChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnVelocityChange(VelocityChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.RatiometricGet">
            <summary>Sets the shim of MotorControl.get_Ratiometric()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.RatiometricSetBoolean">
            <summary>Sets the shim of MotorControl.set_Ratiometric(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.SensorUpdateAddSensorUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_SensorUpdate(SensorUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.SensorUpdateRemoveSensorUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_SensorUpdate(SensorUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.SupplyVoltageGet">
            <summary>Sets the shim of MotorControl.get_SupplyVoltage()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.VelocityChangeAddVelocityChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.VelocityChangeRemoveVelocityChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeBackEMFUpdateEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeBackEMFUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeCurrentChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeCurrentChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeCurrentUpdateEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeCurrentUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeEncoderPositionChangeEventIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of MotorControl.nativeEncoderPositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 timestamp, Int32 position)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeEncoderPositionUpdateEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of MotorControl.nativeEncoderPositionUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 position)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of MotorControl.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeSensorUpdateEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of MotorControl.nativeSensorUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.nativeVelocityChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeVelocityChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.setNativeEvents">
            <summary>Sets the shim of MotorControl.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of MotorControl.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.BackEMFUpdateAddBackEMFUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_BackEMFUpdate(BackEMFUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.BackEMFUpdateRemoveBackEMFUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_BackEMFUpdate(BackEMFUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.CurrentChangeAddCurrentChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.CurrentChangeRemoveCurrentChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.CurrentUpdateAddCurrentUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_CurrentUpdate(CurrentUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.CurrentUpdateRemoveCurrentUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_CurrentUpdate(CurrentUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of MotorControl.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.EncoderPositionChangeAddEncoderPositionChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_EncoderPositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.EncoderPositionChangeRemoveEncoderPositionChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_EncoderPositionChange(EncoderPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.EncoderPositionUpdateAddEncoderPositionUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_EncoderPositionUpdate(EncoderPositionUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.EncoderPositionUpdateRemoveEncoderPositionUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_EncoderPositionUpdate(EncoderPositionUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnBackEMFUpdateBackEMFUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnBackEMFUpdate(BackEMFUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnCurrentChangeCurrentChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnCurrentChange(CurrentChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnCurrentUpdateCurrentUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnCurrentUpdate(CurrentUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnEncoderPositionChangeEncoderPositionChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnEncoderPositionChange(EncoderPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnEncoderPositionUpdateEncoderPositionUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnEncoderPositionUpdate(EncoderPositionUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnSensorUpdateSensorUpdateEventArgs">
            <summary>Sets the shim of MotorControl.OnSensorUpdate(SensorUpdateEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.OnVelocityChangeVelocityChangeEventArgs">
            <summary>Sets the shim of MotorControl.OnVelocityChange(VelocityChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.RatiometricGet">
            <summary>Sets the shim of MotorControl.get_Ratiometric()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.RatiometricSetBoolean">
            <summary>Sets the shim of MotorControl.set_Ratiometric(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.SensorUpdateAddSensorUpdateEventHandler">
            <summary>Sets the shim of MotorControl.add_SensorUpdate(SensorUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.SensorUpdateRemoveSensorUpdateEventHandler">
            <summary>Sets the shim of MotorControl.remove_SensorUpdate(SensorUpdateEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.SupplyVoltageGet">
            <summary>Sets the shim of MotorControl.get_SupplyVoltage()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.VelocityChangeAddVelocityChangeEventHandler">
            <summary>Sets the shim of MotorControl.add_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.VelocityChangeRemoveVelocityChangeEventHandler">
            <summary>Sets the shim of MotorControl.remove_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeBackEMFUpdateEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeBackEMFUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeCurrentChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeCurrentChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeCurrentUpdateEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeCurrentUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeEncoderPositionChangeEventIntPtrIntPtrInt32Int32Int32">
            <summary>Sets the shim of MotorControl.nativeEncoderPositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 timestamp, Int32 position)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeEncoderPositionUpdateEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of MotorControl.nativeEncoderPositionUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 position)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of MotorControl.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeSensorUpdateEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of MotorControl.nativeSensorUpdateEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.nativeVelocityChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of MotorControl.nativeVelocityChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControl.AllInstances.setNativeEvents">
            <summary>Sets the shim of MotorControl.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlAnalogSensor">
            <summary>Shim type of Phidgets.MotorControlAnalogSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensor.#ctor(Phidgets.MotorControlAnalogSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensor.ConstructorIntPtrInt32">
            <summary>Sets the shim of MotorControlAnalogSensor.MotorControlAnalogSensor(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensor.RawValueGet">
            <summary>Sets the shim of MotorControlAnalogSensor.get_RawValue()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensor.ValueGet">
            <summary>Sets the shim of MotorControlAnalogSensor.get_Value()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlAnalogSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensor.AllInstances.RawValueGet">
            <summary>Sets the shim of MotorControlAnalogSensor.get_RawValue()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensor.AllInstances.ValueGet">
            <summary>Sets the shim of MotorControlAnalogSensor.get_Value()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection">
            <summary>Shim type of Phidgets.MotorControlAnalogSensorCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.#ctor(Phidgets.MotorControlAnalogSensorCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.Clear">
            <summary>Sets the shim of MotorControlAnalogSensorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.ConstructorMotorControl">
            <summary>Sets the shim of MotorControlAnalogSensorCollection.MotorControlAnalogSensorCollection(MotorControl phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.Initialize">
            <summary>Sets the shim of MotorControlAnalogSensorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.ItemGetInt32">
            <summary>Sets the shim of MotorControlAnalogSensorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.AllInstances.Clear">
            <summary>Sets the shim of MotorControlAnalogSensorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.AllInstances.Initialize">
            <summary>Sets the shim of MotorControlAnalogSensorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlAnalogSensorCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of MotorControlAnalogSensorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlDigitalInputCollection">
            <summary>Shim type of Phidgets.MotorControlDigitalInputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.#ctor(Phidgets.MotorControlDigitalInputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.ConstructorMotorControl">
            <summary>Sets the shim of MotorControlDigitalInputCollection.MotorControlDigitalInputCollection(MotorControl phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.CountGet">
            <summary>Sets the shim of MotorControlDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.ItemGetInt32">
            <summary>Sets the shim of MotorControlDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.AllInstances.CountGet">
            <summary>Sets the shim of MotorControlDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlDigitalInputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of MotorControlDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlEncoder">
            <summary>Shim type of Phidgets.MotorControlEncoder</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoder.#ctor(Phidgets.MotorControlEncoder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoder.ConstructorIntPtrInt32">
            <summary>Sets the shim of MotorControlEncoder.MotorControlEncoder(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoder.PositionGet">
            <summary>Sets the shim of MotorControlEncoder.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoder.PositionSetInt32">
            <summary>Sets the shim of MotorControlEncoder.set_Position(Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlEncoder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoder.AllInstances.PositionGet">
            <summary>Sets the shim of MotorControlEncoder.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoder.AllInstances.PositionSetInt32">
            <summary>Sets the shim of MotorControlEncoder.set_Position(Int32 value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlEncoderCollection">
            <summary>Shim type of Phidgets.MotorControlEncoderCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoderCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoderCollection.#ctor(Phidgets.MotorControlEncoderCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoderCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoderCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoderCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlEncoderCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.Clear">
            <summary>Sets the shim of MotorControlEncoderCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.ConstructorMotorControl">
            <summary>Sets the shim of MotorControlEncoderCollection.MotorControlEncoderCollection(MotorControl phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.Initialize">
            <summary>Sets the shim of MotorControlEncoderCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.ItemGetInt32">
            <summary>Sets the shim of MotorControlEncoderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlEncoderCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.AllInstances.Clear">
            <summary>Sets the shim of MotorControlEncoderCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.AllInstances.Initialize">
            <summary>Sets the shim of MotorControlEncoderCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlEncoderCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of MotorControlEncoderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlMotor">
            <summary>Shim type of Phidgets.MotorControlMotor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotor.#ctor(Phidgets.MotorControlMotor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AccelerationGet">
            <summary>Sets the shim of MotorControlMotor.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AccelerationMaxGet">
            <summary>Sets the shim of MotorControlMotor.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AccelerationMinGet">
            <summary>Sets the shim of MotorControlMotor.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AccelerationSetDouble">
            <summary>Sets the shim of MotorControlMotor.set_Acceleration(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.BackEMFGet">
            <summary>Sets the shim of MotorControlMotor.get_BackEMF()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.BackEMFSensingGet">
            <summary>Sets the shim of MotorControlMotor.get_BackEMFSensing()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.BackEMFSensingSetBoolean">
            <summary>Sets the shim of MotorControlMotor.set_BackEMFSensing(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.BrakingGet">
            <summary>Sets the shim of MotorControlMotor.get_Braking()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.BrakingSetDouble">
            <summary>Sets the shim of MotorControlMotor.set_Braking(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.ConstructorIntPtrInt32">
            <summary>Sets the shim of MotorControlMotor.MotorControlMotor(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.CurrentGet">
            <summary>Sets the shim of MotorControlMotor.get_Current()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.VelocityGet">
            <summary>Sets the shim of MotorControlMotor.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.VelocitySetDouble">
            <summary>Sets the shim of MotorControlMotor.set_Velocity(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlMotor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.AccelerationGet">
            <summary>Sets the shim of MotorControlMotor.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.AccelerationMaxGet">
            <summary>Sets the shim of MotorControlMotor.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.AccelerationMinGet">
            <summary>Sets the shim of MotorControlMotor.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.AccelerationSetDouble">
            <summary>Sets the shim of MotorControlMotor.set_Acceleration(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.BackEMFGet">
            <summary>Sets the shim of MotorControlMotor.get_BackEMF()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.BackEMFSensingGet">
            <summary>Sets the shim of MotorControlMotor.get_BackEMFSensing()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.BackEMFSensingSetBoolean">
            <summary>Sets the shim of MotorControlMotor.set_BackEMFSensing(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.BrakingGet">
            <summary>Sets the shim of MotorControlMotor.get_Braking()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.BrakingSetDouble">
            <summary>Sets the shim of MotorControlMotor.set_Braking(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.CurrentGet">
            <summary>Sets the shim of MotorControlMotor.get_Current()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.VelocityGet">
            <summary>Sets the shim of MotorControlMotor.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotor.AllInstances.VelocitySetDouble">
            <summary>Sets the shim of MotorControlMotor.set_Velocity(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlMotorCollection">
            <summary>Shim type of Phidgets.MotorControlMotorCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotorCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotorCollection.#ctor(Phidgets.MotorControlMotorCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotorCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotorCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotorCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimMotorControlMotorCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.Clear">
            <summary>Sets the shim of MotorControlMotorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.ConstructorMotorControl">
            <summary>Sets the shim of MotorControlMotorCollection.MotorControlMotorCollection(MotorControl phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.Initialize">
            <summary>Sets the shim of MotorControlMotorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.ItemGetInt32">
            <summary>Sets the shim of MotorControlMotorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimMotorControlMotorCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.AllInstances.Clear">
            <summary>Sets the shim of MotorControlMotorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.AllInstances.Initialize">
            <summary>Sets the shim of MotorControlMotorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimMotorControlMotorCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of MotorControlMotorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPHSensor">
            <summary>Shim type of Phidgets.PHSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensor.#ctor(Phidgets.PHSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of PHSensor.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.Constructor">
            <summary>Sets the shim of PHSensor.PHSensor()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of PHSensor.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.OnPHChangePHChangeEventArgs">
            <summary>Sets the shim of PHSensor.OnPHChange(PHChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.PHChangeAddPHChangeEventHandler">
            <summary>Sets the shim of PHSensor.add_PHChange(PHChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.PHChangeRemovePHChangeEventHandler">
            <summary>Sets the shim of PHSensor.remove_PHChange(PHChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.nativePHChangeEventIntPtrIntPtrDouble">
            <summary>Sets the shim of PHSensor.nativePHChangeEvent(IntPtr phidA, IntPtr userPtr, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.setNativeEvents">
            <summary>Sets the shim of PHSensor.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPHSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of PHSensor.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of PHSensor.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AllInstances.OnPHChangePHChangeEventArgs">
            <summary>Sets the shim of PHSensor.OnPHChange(PHChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AllInstances.PHChangeAddPHChangeEventHandler">
            <summary>Sets the shim of PHSensor.add_PHChange(PHChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AllInstances.PHChangeRemovePHChangeEventHandler">
            <summary>Sets the shim of PHSensor.remove_PHChange(PHChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AllInstances.nativePHChangeEventIntPtrIntPtrDouble">
            <summary>Sets the shim of PHSensor.nativePHChangeEvent(IntPtr phidA, IntPtr userPtr, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensor.AllInstances.setNativeEvents">
            <summary>Sets the shim of PHSensor.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPHSensorSensor">
            <summary>Shim type of Phidgets.PHSensorSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensorSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensorSensor.#ctor(Phidgets.PHSensorSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensorSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPHSensorSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.ConstructorPHSensor">
            <summary>Sets the shim of PHSensorSensor.PHSensorSensor(PHSensor phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.PHGet">
            <summary>Sets the shim of PHSensorSensor.get_PH()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.PHMaxGet">
            <summary>Sets the shim of PHSensorSensor.get_PHMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.PHMinGet">
            <summary>Sets the shim of PHSensorSensor.get_PHMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.PotentialGet">
            <summary>Sets the shim of PHSensorSensor.get_Potential()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.PotentialMaxGet">
            <summary>Sets the shim of PHSensorSensor.get_PotentialMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.PotentialMinGet">
            <summary>Sets the shim of PHSensorSensor.get_PotentialMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.SensitivityGet">
            <summary>Sets the shim of PHSensorSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.SensitivitySetDouble">
            <summary>Sets the shim of PHSensorSensor.set_Sensitivity(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.TemperatureSetDouble">
            <summary>Sets the shim of PHSensorSensor.set_Temperature(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPHSensorSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.PHGet">
            <summary>Sets the shim of PHSensorSensor.get_PH()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.PHMaxGet">
            <summary>Sets the shim of PHSensorSensor.get_PHMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.PHMinGet">
            <summary>Sets the shim of PHSensorSensor.get_PHMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.PotentialGet">
            <summary>Sets the shim of PHSensorSensor.get_Potential()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.PotentialMaxGet">
            <summary>Sets the shim of PHSensorSensor.get_PotentialMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.PotentialMinGet">
            <summary>Sets the shim of PHSensorSensor.get_PotentialMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.SensitivityGet">
            <summary>Sets the shim of PHSensorSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.SensitivitySetDouble">
            <summary>Sets the shim of PHSensorSensor.set_Sensitivity(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPHSensorSensor.AllInstances.TemperatureSetDouble">
            <summary>Sets the shim of PHSensorSensor.set_Temperature(Double value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPhidget">
            <summary>Shim type of Phidgets.Phidget</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidget.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidget.#ctor(Phidgets.Phidget)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidget.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidget.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AddressGet">
            <summary>Sets the shim of Phidget.get_Address()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AttachAddAttachEventHandler">
            <summary>Sets the shim of Phidget.add_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Phidget.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AttachRemoveAttachEventHandler">
            <summary>Sets the shim of Phidget.remove_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AttachedGet">
            <summary>Sets the shim of Phidget.get_Attached()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AttachedToServerGet">
            <summary>Sets the shim of Phidget.get_AttachedToServer()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ClassGet">
            <summary>Sets the shim of Phidget.get_Class()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.Constructor">
            <summary>Sets the shim of Phidget.Phidget()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.DetachAddDetachEventHandler">
            <summary>Sets the shim of Phidget.add_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Phidget.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.DetachRemoveDetachEventHandler">
            <summary>Sets the shim of Phidget.remove_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.EqualsObject">
            <summary>Sets the shim of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ErrorAddErrorEventHandler">
            <summary>Sets the shim of Phidget.add_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ErrorRemoveErrorEventHandler">
            <summary>Sets the shim of Phidget.remove_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.GetHashCode">
            <summary>Sets the shim of Phidget.GetHashCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.IDGet">
            <summary>Sets the shim of Phidget.get_ID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.Int32toPhidgetClassInt32">
            <summary>Sets the shim of Phidget.Int32toPhidgetClass(Int32 classnum)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.Int32toPhidgetIDInt32">
            <summary>Sets the shim of Phidget.Int32toPhidgetID(Int32 id)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.LabelGet">
            <summary>Sets the shim of Phidget.get_Label()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.LabelSetString">
            <summary>Sets the shim of Phidget.set_Label(String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.LibraryVersionGet">
            <summary>Sets the shim of Phidget.get_LibraryVersion()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.LogLeveltoIntPhidgetLogLevel">
            <summary>Sets the shim of Phidget.LogLeveltoInt(LogLevel level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.NameGet">
            <summary>Sets the shim of Phidget.get_Name()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.OnAttachAttachEventArgs">
            <summary>Sets the shim of Phidget.OnAttach(AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.OnDetachDetachEventArgs">
            <summary>Sets the shim of Phidget.OnDetach(DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.OnErrorErrorEventArgs">
            <summary>Sets the shim of Phidget.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.OnServerConnectServerConnectEventArgs">
            <summary>Sets the shim of Phidget.OnServerConnect(ServerConnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.OnServerDisconnectServerDisconnectEventArgs">
            <summary>Sets the shim of Phidget.OnServerDisconnect(ServerDisconnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.PortGet">
            <summary>Sets the shim of Phidget.get_Port()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.PtrToStringAnsiIntPtr">
            <summary>Sets the shim of Phidget.PtrToStringAnsi(IntPtr ptr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.SerialNumberGet">
            <summary>Sets the shim of Phidget.get_SerialNumber()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ServerConnectAddServerConnectEventHandler">
            <summary>Sets the shim of Phidget.add_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ServerConnectRemoveServerConnectEventHandler">
            <summary>Sets the shim of Phidget.remove_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ServerDisconnectAddServerDisconnectEventHandler">
            <summary>Sets the shim of Phidget.add_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ServerDisconnectRemoveServerDisconnectEventHandler">
            <summary>Sets the shim of Phidget.remove_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.ServerIDGet">
            <summary>Sets the shim of Phidget.get_ServerID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.StringToHGlobalAnsiString">
            <summary>Sets the shim of Phidget.StringToHGlobalAnsi(String str)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.TypeGet">
            <summary>Sets the shim of Phidget.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.VersionGet">
            <summary>Sets the shim of Phidget.get_Version()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.close">
            <summary>Sets the shim of Phidget.close()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.disableLogging">
            <summary>Sets the shim of Phidget.disableLogging()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.enableLoggingPhidgetLogLevelString">
            <summary>Sets the shim of Phidget.enableLogging(LogLevel level, String file)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.logPhidgetLogLevelStringString">
            <summary>Sets the shim of Phidget.log(LogLevel level, String identifier, String log)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.nativeAttachEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeAttachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.nativeDetachEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeDetachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.nativeErrorEventIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of Phidget.nativeErrorEvent(IntPtr phidA, IntPtr userPtr, Int32 code, IntPtr error)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.nativeServerConnectEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeServerConnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.nativeServerDisconnectEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeServerDisconnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.open">
            <summary>Sets the shim of Phidget.open()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openInt32">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openInt32String">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openInt32StringInt32">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openInt32StringInt32String">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openInt32StringString">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String ServerID, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openString">
            <summary>Sets the shim of Phidget.open(String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openStringInt32">
            <summary>Sets the shim of Phidget.open(String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openStringInt32String">
            <summary>Sets the shim of Phidget.open(String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.openStringString">
            <summary>Sets the shim of Phidget.open(String ServerID, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.setNativeEvents">
            <summary>Sets the shim of Phidget.setNativeEvents()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.waitForAttachment">
            <summary>Sets the shim of Phidget.waitForAttachment()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.waitForAttachmentInt32">
            <summary>Sets the shim of Phidget.waitForAttachment(Int32 milliseconds)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPhidget.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.AddressGet">
            <summary>Sets the shim of Phidget.get_Address()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.AttachAddAttachEventHandler">
            <summary>Sets the shim of Phidget.add_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Phidget.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.AttachRemoveAttachEventHandler">
            <summary>Sets the shim of Phidget.remove_Attach(AttachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.AttachedGet">
            <summary>Sets the shim of Phidget.get_Attached()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.AttachedToServerGet">
            <summary>Sets the shim of Phidget.get_AttachedToServer()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ClassGet">
            <summary>Sets the shim of Phidget.get_Class()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.DetachAddDetachEventHandler">
            <summary>Sets the shim of Phidget.add_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Phidget.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.DetachRemoveDetachEventHandler">
            <summary>Sets the shim of Phidget.remove_Detach(DetachEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.EqualsObject">
            <summary>Sets the shim of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ErrorAddErrorEventHandler">
            <summary>Sets the shim of Phidget.add_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ErrorRemoveErrorEventHandler">
            <summary>Sets the shim of Phidget.remove_Error(ErrorEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.GetHashCode01">
            <summary>Sets the shim of Phidget.GetHashCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.IDGet">
            <summary>Sets the shim of Phidget.get_ID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.Int32toPhidgetClassInt32">
            <summary>Sets the shim of Phidget.Int32toPhidgetClass(Int32 classnum)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.Int32toPhidgetIDInt32">
            <summary>Sets the shim of Phidget.Int32toPhidgetID(Int32 id)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.LabelGet">
            <summary>Sets the shim of Phidget.get_Label()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.LabelSetString">
            <summary>Sets the shim of Phidget.set_Label(String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.NameGet">
            <summary>Sets the shim of Phidget.get_Name()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.OnAttachAttachEventArgs">
            <summary>Sets the shim of Phidget.OnAttach(AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.OnDetachDetachEventArgs">
            <summary>Sets the shim of Phidget.OnDetach(DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.OnErrorErrorEventArgs">
            <summary>Sets the shim of Phidget.OnError(ErrorEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.OnServerConnectServerConnectEventArgs">
            <summary>Sets the shim of Phidget.OnServerConnect(ServerConnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.OnServerDisconnectServerDisconnectEventArgs">
            <summary>Sets the shim of Phidget.OnServerDisconnect(ServerDisconnectEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.PortGet">
            <summary>Sets the shim of Phidget.get_Port()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.SerialNumberGet">
            <summary>Sets the shim of Phidget.get_SerialNumber()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ServerConnectAddServerConnectEventHandler">
            <summary>Sets the shim of Phidget.add_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ServerConnectRemoveServerConnectEventHandler">
            <summary>Sets the shim of Phidget.remove_ServerConnect(ServerConnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ServerDisconnectAddServerDisconnectEventHandler">
            <summary>Sets the shim of Phidget.add_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ServerDisconnectRemoveServerDisconnectEventHandler">
            <summary>Sets the shim of Phidget.remove_ServerDisconnect(ServerDisconnectEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.ServerIDGet">
            <summary>Sets the shim of Phidget.get_ServerID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.TypeGet">
            <summary>Sets the shim of Phidget.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.VersionGet">
            <summary>Sets the shim of Phidget.get_Version()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.close">
            <summary>Sets the shim of Phidget.close()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.nativeAttachEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeAttachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.nativeDetachEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeDetachEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.nativeErrorEventIntPtrIntPtrInt32IntPtr">
            <summary>Sets the shim of Phidget.nativeErrorEvent(IntPtr phidA, IntPtr userPtr, Int32 code, IntPtr error)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.nativeServerConnectEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeServerConnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.nativeServerDisconnectEventIntPtrIntPtr">
            <summary>Sets the shim of Phidget.nativeServerDisconnectEvent(IntPtr phidA, IntPtr userPtr)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.open">
            <summary>Sets the shim of Phidget.open()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openInt32">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openInt32String">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openInt32StringInt32">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openInt32StringInt32String">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openInt32StringString">
            <summary>Sets the shim of Phidget.open(Int32 serialNumber, String ServerID, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openString">
            <summary>Sets the shim of Phidget.open(String ServerID)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openStringInt32">
            <summary>Sets the shim of Phidget.open(String IPAddress, Int32 port)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openStringInt32String">
            <summary>Sets the shim of Phidget.open(String IPAddress, Int32 port, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.openStringString">
            <summary>Sets the shim of Phidget.open(String ServerID, String password)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.setNativeEvents">
            <summary>Sets the shim of Phidget.setNativeEvents()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.waitForAttachment">
            <summary>Sets the shim of Phidget.waitForAttachment()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidget.AllInstances.waitForAttachmentInt32">
            <summary>Sets the shim of Phidget.waitForAttachment(Int32 milliseconds)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPhidgetCollection">
            <summary>Shim type of Phidgets.PhidgetCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetCollection.#ctor(Phidgets.PhidgetCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.AddPhidget">
            <summary>Sets the shim of PhidgetCollection.Add(Phidget value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.Constructor">
            <summary>Sets the shim of PhidgetCollection.PhidgetCollection()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.ItemGetInt32">
            <summary>Sets the shim of PhidgetCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.RemovePhidget">
            <summary>Sets the shim of PhidgetCollection.Remove(Phidget value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPhidgetCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.AllInstances.AddPhidget">
            <summary>Sets the shim of PhidgetCollection.Add(Phidget value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of PhidgetCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetCollection.AllInstances.RemovePhidget">
            <summary>Sets the shim of PhidgetCollection.Remove(Phidget value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPhidgetException">
            <summary>Shim type of Phidgets.PhidgetException</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetException.#ctor(Phidgets.PhidgetException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimPhidgetException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.CodeGet">
            <summary>Sets the shim of PhidgetException.get_Code()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.ConstructorInt32">
            <summary>Sets the shim of PhidgetException.PhidgetException(Int32 code)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.ConstructorStringInt32">
            <summary>Sets the shim of PhidgetException.PhidgetException(String message, Int32 code)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.ConstructorStringPhidgetExceptionErrorType">
            <summary>Sets the shim of PhidgetException.PhidgetException(String message, ErrorType type)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.DescriptionGet">
            <summary>Sets the shim of PhidgetException.get_Description()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.GetErrorDescInt32">
            <summary>Sets the shim of PhidgetException.GetErrorDesc(Int32 code)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.TypeGet">
            <summary>Sets the shim of PhidgetException.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.errorCodeToErrorTypeInt32">
            <summary>Sets the shim of PhidgetException.errorCodeToErrorType(Int32 code)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimPhidgetException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.AllInstances.CodeGet">
            <summary>Sets the shim of PhidgetException.get_Code()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.AllInstances.DescriptionGet">
            <summary>Sets the shim of PhidgetException.get_Description()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.AllInstances.TypeGet">
            <summary>Sets the shim of PhidgetException.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimPhidgetException.AllInstances.errorCodeToErrorTypeInt32">
            <summary>Sets the shim of PhidgetException.errorCodeToErrorType(Int32 code)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimRFID">
            <summary>Shim type of Phidgets.RFID</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFID.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFID.#ctor(Phidgets.RFID)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFID.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFID.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AntennaGet">
            <summary>Sets the shim of RFID.get_Antenna()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AntennaSetBoolean">
            <summary>Sets the shim of RFID.set_Antenna(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of RFID.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.Constructor">
            <summary>Sets the shim of RFID.RFID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.LEDGet">
            <summary>Sets the shim of RFID.get_LED()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.LEDSetBoolean">
            <summary>Sets the shim of RFID.set_LED(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.LastTagGet">
            <summary>Sets the shim of RFID.get_LastTag()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.OnOutputChangeOutputChangeEventArgs">
            <summary>Sets the shim of RFID.OnOutputChange(OutputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.OnTagLostTagEventArgs">
            <summary>Sets the shim of RFID.OnTagLost(TagEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.OnTagTagEventArgs">
            <summary>Sets the shim of RFID.OnTag(TagEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.OutputChangeAddOutputChangeEventHandler">
            <summary>Sets the shim of RFID.add_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.OutputChangeRemoveOutputChangeEventHandler">
            <summary>Sets the shim of RFID.remove_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.StaticConstructor">
            <summary>Sets the shim of RFID.RFID()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.TagAddTagEventHandler">
            <summary>Sets the shim of RFID.add_Tag(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.TagLostAddTagEventHandler">
            <summary>Sets the shim of RFID.add_TagLost(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.TagLostRemoveTagEventHandler">
            <summary>Sets the shim of RFID.remove_TagLost(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.TagPresentGet">
            <summary>Sets the shim of RFID.get_TagPresent()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.TagRemoveTagEventHandler">
            <summary>Sets the shim of RFID.remove_Tag(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.nativeOutputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of RFID.nativeOutputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.nativeTagEventIntPtrIntPtrIntPtr">
            <summary>Sets the shim of RFID.nativeTagEvent(IntPtr phidA, IntPtr userPtr, IntPtr value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.nativeTagLostEventIntPtrIntPtrIntPtr">
            <summary>Sets the shim of RFID.nativeTagLostEvent(IntPtr phidA, IntPtr userPtr, IntPtr value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.setNativeEvents">
            <summary>Sets the shim of RFID.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimRFID.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.AntennaGet">
            <summary>Sets the shim of RFID.get_Antenna()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.AntennaSetBoolean">
            <summary>Sets the shim of RFID.set_Antenna(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of RFID.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.LEDGet">
            <summary>Sets the shim of RFID.get_LED()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.LEDSetBoolean">
            <summary>Sets the shim of RFID.set_LED(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.LastTagGet">
            <summary>Sets the shim of RFID.get_LastTag()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.OnOutputChangeOutputChangeEventArgs">
            <summary>Sets the shim of RFID.OnOutputChange(OutputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.OnTagLostTagEventArgs">
            <summary>Sets the shim of RFID.OnTagLost(TagEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.OnTagTagEventArgs">
            <summary>Sets the shim of RFID.OnTag(TagEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.OutputChangeAddOutputChangeEventHandler">
            <summary>Sets the shim of RFID.add_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.OutputChangeRemoveOutputChangeEventHandler">
            <summary>Sets the shim of RFID.remove_OutputChange(OutputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.TagAddTagEventHandler">
            <summary>Sets the shim of RFID.add_Tag(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.TagLostAddTagEventHandler">
            <summary>Sets the shim of RFID.add_TagLost(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.TagLostRemoveTagEventHandler">
            <summary>Sets the shim of RFID.remove_TagLost(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.TagPresentGet">
            <summary>Sets the shim of RFID.get_TagPresent()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.TagRemoveTagEventHandler">
            <summary>Sets the shim of RFID.remove_Tag(TagEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.nativeOutputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of RFID.nativeOutputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.nativeTagEventIntPtrIntPtrIntPtr">
            <summary>Sets the shim of RFID.nativeTagEvent(IntPtr phidA, IntPtr userPtr, IntPtr value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.nativeTagLostEventIntPtrIntPtrIntPtr">
            <summary>Sets the shim of RFID.nativeTagLostEvent(IntPtr phidA, IntPtr userPtr, IntPtr value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFID.AllInstances.setNativeEvents">
            <summary>Sets the shim of RFID.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimRFIDDigitalOutputCollection">
            <summary>Shim type of Phidgets.RFIDDigitalOutputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.#ctor(Phidgets.RFIDDigitalOutputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.ConstructorRFID">
            <summary>Sets the shim of RFIDDigitalOutputCollection.RFIDDigitalOutputCollection(RFID phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.CountGet">
            <summary>Sets the shim of RFIDDigitalOutputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.ItemGetInt32">
            <summary>Sets the shim of RFIDDigitalOutputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.ItemSetInt32Boolean">
            <summary>Sets the shim of RFIDDigitalOutputCollection.set_Item(Int32 index, Boolean value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.AllInstances.CountGet">
            <summary>Sets the shim of RFIDDigitalOutputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of RFIDDigitalOutputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimRFIDDigitalOutputCollection.AllInstances.ItemSetInt32Boolean">
            <summary>Sets the shim of RFIDDigitalOutputCollection.set_Item(Int32 index, Boolean value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimServo">
            <summary>Shim type of Phidgets.Servo</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServo.#ctor(Phidgets.Servo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Servo.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.Constructor">
            <summary>Sets the shim of Servo.Servo()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Servo.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.OnPositionChangePositionChangeEventArgs">
            <summary>Sets the shim of Servo.OnPositionChange(PositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.PositionChangeAddPositionChangeEventHandler">
            <summary>Sets the shim of Servo.add_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.PositionChangeRemovePositionChangeEventHandler">
            <summary>Sets the shim of Servo.remove_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.nativePositionChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Servo.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.setNativeEvents">
            <summary>Sets the shim of Servo.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimServo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Servo.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Servo.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AllInstances.OnPositionChangePositionChangeEventArgs">
            <summary>Sets the shim of Servo.OnPositionChange(PositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AllInstances.PositionChangeAddPositionChangeEventHandler">
            <summary>Sets the shim of Servo.add_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AllInstances.PositionChangeRemovePositionChangeEventHandler">
            <summary>Sets the shim of Servo.remove_PositionChange(PositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AllInstances.nativePositionChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Servo.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServo.AllInstances.setNativeEvents">
            <summary>Sets the shim of Servo.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimServoServo">
            <summary>Shim type of Phidgets.ServoServo</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServo.#ctor(Phidgets.ServoServo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.ConstructorIntPtrInt32">
            <summary>Sets the shim of ServoServo.ServoServo(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.EngagedGet">
            <summary>Sets the shim of ServoServo.get_Engaged()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.EngagedSetBoolean">
            <summary>Sets the shim of ServoServo.set_Engaged(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.Int32toServoTypeInt32">
            <summary>Sets the shim of ServoServo.Int32toServoType(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.PositionGet">
            <summary>Sets the shim of ServoServo.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.PositionMaxGet">
            <summary>Sets the shim of ServoServo.get_PositionMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.PositionMinGet">
            <summary>Sets the shim of ServoServo.get_PositionMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.PositionSetDouble">
            <summary>Sets the shim of ServoServo.set_Position(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.ServoTypetoInt32ServoServoServoType">
            <summary>Sets the shim of ServoServo.ServoTypetoInt32(ServoType level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.TypeGet">
            <summary>Sets the shim of ServoServo.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.TypeSetServoServoServoType">
            <summary>Sets the shim of ServoServo.set_Type(ServoType value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.setServoParametersDoubleDoubleDouble">
            <summary>Sets the shim of ServoServo.setServoParameters(Double minimumPulseWidth, Double maximumPulseWidth, Double degrees)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimServoServo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.EngagedGet">
            <summary>Sets the shim of ServoServo.get_Engaged()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.EngagedSetBoolean">
            <summary>Sets the shim of ServoServo.set_Engaged(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.PositionGet">
            <summary>Sets the shim of ServoServo.get_Position()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.PositionMaxGet">
            <summary>Sets the shim of ServoServo.get_PositionMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.PositionMinGet">
            <summary>Sets the shim of ServoServo.get_PositionMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.PositionSetDouble">
            <summary>Sets the shim of ServoServo.set_Position(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.TypeGet">
            <summary>Sets the shim of ServoServo.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.TypeSetServoServoServoType">
            <summary>Sets the shim of ServoServo.set_Type(ServoType value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServo.AllInstances.setServoParametersDoubleDoubleDouble">
            <summary>Sets the shim of ServoServo.setServoParameters(Double minimumPulseWidth, Double maximumPulseWidth, Double degrees)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimServoServoCollection">
            <summary>Shim type of Phidgets.ServoServoCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServoCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServoCollection.#ctor(Phidgets.ServoServoCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServoCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServoCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServoCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimServoServoCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.Clear">
            <summary>Sets the shim of ServoServoCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.ConstructorServo">
            <summary>Sets the shim of ServoServoCollection.ServoServoCollection(Servo phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.Initialize">
            <summary>Sets the shim of ServoServoCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.ItemGetInt32">
            <summary>Sets the shim of ServoServoCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimServoServoCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.AllInstances.Clear">
            <summary>Sets the shim of ServoServoCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.AllInstances.Initialize">
            <summary>Sets the shim of ServoServoCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimServoServoCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ServoServoCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatial">
            <summary>Shim type of Phidgets.Spatial</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatial.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatial.#ctor(Phidgets.Spatial)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatial.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatial.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Spatial.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.Constructor">
            <summary>Sets the shim of Spatial.Spatial()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.DataRateGet">
            <summary>Sets the shim of Spatial.get_DataRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.DataRateMaxGet">
            <summary>Sets the shim of Spatial.get_DataRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.DataRateMinGet">
            <summary>Sets the shim of Spatial.get_DataRateMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.DataRateSetInt32">
            <summary>Sets the shim of Spatial.set_DataRate(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Spatial.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.OnSpatialDataSpatialDataEventArgs">
            <summary>Sets the shim of Spatial.OnSpatialData(SpatialDataEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.SpatialDataAddSpatialDataEventHandler">
            <summary>Sets the shim of Spatial.add_SpatialData(SpatialDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.SpatialDataRemoveSpatialDataEventHandler">
            <summary>Sets the shim of Spatial.remove_SpatialData(SpatialDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.nativeSpatialDataEventIntPtrIntPtrIntPtrInt32">
            <summary>Sets the shim of Spatial.nativeSpatialDataEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 count)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.resetCompassCorrectionParameters">
            <summary>Sets the shim of Spatial.resetCompassCorrectionParameters()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.setCompassCorrectionParametersDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the shim of Spatial.setCompassCorrectionParameters(Double magField, Double offset0, Double offset1, Double offset2, Double gain0, Double gain1, Double gain2, Double T0, Double T1, Double T2, Double T3, Double T4, Double T5)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.setNativeEvents">
            <summary>Sets the shim of Spatial.setNativeEvents()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.zeroGyro">
            <summary>Sets the shim of Spatial.zeroGyro()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatial.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Spatial.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.DataRateGet">
            <summary>Sets the shim of Spatial.get_DataRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.DataRateMaxGet">
            <summary>Sets the shim of Spatial.get_DataRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.DataRateMinGet">
            <summary>Sets the shim of Spatial.get_DataRateMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.DataRateSetInt32">
            <summary>Sets the shim of Spatial.set_DataRate(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Spatial.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.OnSpatialDataSpatialDataEventArgs">
            <summary>Sets the shim of Spatial.OnSpatialData(SpatialDataEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.SpatialDataAddSpatialDataEventHandler">
            <summary>Sets the shim of Spatial.add_SpatialData(SpatialDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.SpatialDataRemoveSpatialDataEventHandler">
            <summary>Sets the shim of Spatial.remove_SpatialData(SpatialDataEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.nativeSpatialDataEventIntPtrIntPtrIntPtrInt32">
            <summary>Sets the shim of Spatial.nativeSpatialDataEvent(IntPtr phidA, IntPtr userPtr, IntPtr data, Int32 count)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.resetCompassCorrectionParameters">
            <summary>Sets the shim of Spatial.resetCompassCorrectionParameters()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.setCompassCorrectionParametersDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDoubleDouble">
            <summary>Sets the shim of Spatial.setCompassCorrectionParameters(Double magField, Double offset0, Double offset1, Double offset2, Double gain0, Double gain1, Double gain2, Double T0, Double T1, Double T2, Double T3, Double T4, Double T5)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.setNativeEvents">
            <summary>Sets the shim of Spatial.setNativeEvents()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatial.AllInstances.zeroGyro">
            <summary>Sets the shim of Spatial.zeroGyro()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialAccelerometerAxis">
            <summary>Shim type of Phidgets.SpatialAccelerometerAxis</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxis.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxis.#ctor(Phidgets.SpatialAccelerometerAxis)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.AccelerationGet">
            <summary>Sets the shim of SpatialAccelerometerAxis.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.AccelerationMaxGet">
            <summary>Sets the shim of SpatialAccelerometerAxis.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.AccelerationMinGet">
            <summary>Sets the shim of SpatialAccelerometerAxis.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.ConstructorIntPtrInt32">
            <summary>Sets the shim of SpatialAccelerometerAxis.SpatialAccelerometerAxis(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.ConstructorSpatialInt32">
            <summary>Sets the shim of SpatialAccelerometerAxis.SpatialAccelerometerAxis(Spatial phid, Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialAccelerometerAxis.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.AllInstances.AccelerationGet">
            <summary>Sets the shim of SpatialAccelerometerAxis.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.AllInstances.AccelerationMaxGet">
            <summary>Sets the shim of SpatialAccelerometerAxis.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxis.AllInstances.AccelerationMinGet">
            <summary>Sets the shim of SpatialAccelerometerAxis.get_AccelerationMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection">
            <summary>Shim type of Phidgets.SpatialAccelerometerAxisCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.#ctor(Phidgets.SpatialAccelerometerAxisCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.Clear">
            <summary>Sets the shim of SpatialAccelerometerAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.ConstructorSpatial">
            <summary>Sets the shim of SpatialAccelerometerAxisCollection.SpatialAccelerometerAxisCollection(Spatial phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.Initialize">
            <summary>Sets the shim of SpatialAccelerometerAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.ItemGetInt32">
            <summary>Sets the shim of SpatialAccelerometerAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.AllInstances.Clear">
            <summary>Sets the shim of SpatialAccelerometerAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.AllInstances.Initialize">
            <summary>Sets the shim of SpatialAccelerometerAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialAccelerometerAxisCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SpatialAccelerometerAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialCompassAxis">
            <summary>Shim type of Phidgets.SpatialCompassAxis</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxis.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxis.#ctor(Phidgets.SpatialCompassAxis)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.ConstructorIntPtrInt32">
            <summary>Sets the shim of SpatialCompassAxis.SpatialCompassAxis(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.ConstructorSpatialInt32">
            <summary>Sets the shim of SpatialCompassAxis.SpatialCompassAxis(Spatial phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.MagneticFieldGet">
            <summary>Sets the shim of SpatialCompassAxis.get_MagneticField()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.MagneticFieldMaxGet">
            <summary>Sets the shim of SpatialCompassAxis.get_MagneticFieldMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.MagneticFieldMinGet">
            <summary>Sets the shim of SpatialCompassAxis.get_MagneticFieldMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialCompassAxis.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.AllInstances.MagneticFieldGet">
            <summary>Sets the shim of SpatialCompassAxis.get_MagneticField()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.AllInstances.MagneticFieldMaxGet">
            <summary>Sets the shim of SpatialCompassAxis.get_MagneticFieldMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxis.AllInstances.MagneticFieldMinGet">
            <summary>Sets the shim of SpatialCompassAxis.get_MagneticFieldMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialCompassAxisCollection">
            <summary>Shim type of Phidgets.SpatialCompassAxisCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxisCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxisCollection.#ctor(Phidgets.SpatialCompassAxisCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxisCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxisCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxisCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialCompassAxisCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.Clear">
            <summary>Sets the shim of SpatialCompassAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.ConstructorSpatial">
            <summary>Sets the shim of SpatialCompassAxisCollection.SpatialCompassAxisCollection(Spatial phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.Initialize">
            <summary>Sets the shim of SpatialCompassAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.ItemGetInt32">
            <summary>Sets the shim of SpatialCompassAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialCompassAxisCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.AllInstances.Clear">
            <summary>Sets the shim of SpatialCompassAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.AllInstances.Initialize">
            <summary>Sets the shim of SpatialCompassAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialCompassAxisCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SpatialCompassAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialEventData">
            <summary>Shim type of Phidgets.SpatialEventData</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialEventData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialEventData.#ctor(Phidgets.SpatialEventData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialEventData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialEventData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialEventData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialEventData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialGyroAxis">
            <summary>Shim type of Phidgets.SpatialGyroAxis</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxis.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxis.#ctor(Phidgets.SpatialGyroAxis)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxis.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxis.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.AngularRateGet">
            <summary>Sets the shim of SpatialGyroAxis.get_AngularRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.AngularRateMaxGet">
            <summary>Sets the shim of SpatialGyroAxis.get_AngularRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.AngularRateMinGet">
            <summary>Sets the shim of SpatialGyroAxis.get_AngularRateMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.ConstructorIntPtrInt32">
            <summary>Sets the shim of SpatialGyroAxis.SpatialGyroAxis(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.ConstructorSpatialInt32">
            <summary>Sets the shim of SpatialGyroAxis.SpatialGyroAxis(Spatial phid, Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialGyroAxis.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.AllInstances.AngularRateGet">
            <summary>Sets the shim of SpatialGyroAxis.get_AngularRate()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.AllInstances.AngularRateMaxGet">
            <summary>Sets the shim of SpatialGyroAxis.get_AngularRateMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxis.AllInstances.AngularRateMinGet">
            <summary>Sets the shim of SpatialGyroAxis.get_AngularRateMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialGyroAxisCollection">
            <summary>Shim type of Phidgets.SpatialGyroAxisCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxisCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxisCollection.#ctor(Phidgets.SpatialGyroAxisCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxisCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxisCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxisCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimSpatialGyroAxisCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.Clear">
            <summary>Sets the shim of SpatialGyroAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.ConstructorSpatial">
            <summary>Sets the shim of SpatialGyroAxisCollection.SpatialGyroAxisCollection(Spatial phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.Initialize">
            <summary>Sets the shim of SpatialGyroAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.ItemGetInt32">
            <summary>Sets the shim of SpatialGyroAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimSpatialGyroAxisCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.AllInstances.Clear">
            <summary>Sets the shim of SpatialGyroAxisCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.AllInstances.Initialize">
            <summary>Sets the shim of SpatialGyroAxisCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimSpatialGyroAxisCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SpatialGyroAxisCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepper">
            <summary>Shim type of Phidgets.Stepper</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepper.#ctor(Phidgets.Stepper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Stepper.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.Constructor">
            <summary>Sets the shim of Stepper.Stepper()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.CurrentChangeAddCurrentChangeEventHandler">
            <summary>Sets the shim of Stepper.add_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.CurrentChangeRemoveCurrentChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Stepper.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of Stepper.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.OnCurrentChangeCurrentChangeEventArgs">
            <summary>Sets the shim of Stepper.OnCurrentChange(CurrentChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of Stepper.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.OnPositionChangeStepperPositionChangeEventArgs">
            <summary>Sets the shim of Stepper.OnPositionChange(StepperPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.OnVelocityChangeVelocityChangeEventArgs">
            <summary>Sets the shim of Stepper.OnVelocityChange(VelocityChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.PositionChangeAddStepperPositionChangeEventHandler">
            <summary>Sets the shim of Stepper.add_PositionChange(StepperPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.PositionChangeRemoveStepperPositionChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_PositionChange(StepperPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.VelocityChangeAddVelocityChangeEventHandler">
            <summary>Sets the shim of Stepper.add_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.VelocityChangeRemoveVelocityChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.nativeCurrentChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Stepper.nativeCurrentChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of Stepper.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.nativePositionChangeEventIntPtrIntPtrInt32Int64">
            <summary>Sets the shim of Stepper.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int64 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.nativeVelocityChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Stepper.nativeVelocityChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.setNativeEvents">
            <summary>Sets the shim of Stepper.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of Stepper.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.CurrentChangeAddCurrentChangeEventHandler">
            <summary>Sets the shim of Stepper.add_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.CurrentChangeRemoveCurrentChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_CurrentChange(CurrentChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of Stepper.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.InputChangeAddInputChangeEventHandler">
            <summary>Sets the shim of Stepper.add_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.InputChangeRemoveInputChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_InputChange(InputChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.OnCurrentChangeCurrentChangeEventArgs">
            <summary>Sets the shim of Stepper.OnCurrentChange(CurrentChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.OnInputChangeInputChangeEventArgs">
            <summary>Sets the shim of Stepper.OnInputChange(InputChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.OnPositionChangeStepperPositionChangeEventArgs">
            <summary>Sets the shim of Stepper.OnPositionChange(StepperPositionChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.OnVelocityChangeVelocityChangeEventArgs">
            <summary>Sets the shim of Stepper.OnVelocityChange(VelocityChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.PositionChangeAddStepperPositionChangeEventHandler">
            <summary>Sets the shim of Stepper.add_PositionChange(StepperPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.PositionChangeRemoveStepperPositionChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_PositionChange(StepperPositionChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.VelocityChangeAddVelocityChangeEventHandler">
            <summary>Sets the shim of Stepper.add_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.VelocityChangeRemoveVelocityChangeEventHandler">
            <summary>Sets the shim of Stepper.remove_VelocityChange(VelocityChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.nativeCurrentChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Stepper.nativeCurrentChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.nativeInputChangeEventIntPtrIntPtrInt32Int32">
            <summary>Sets the shim of Stepper.nativeInputChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.nativePositionChangeEventIntPtrIntPtrInt32Int64">
            <summary>Sets the shim of Stepper.nativePositionChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Int64 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.nativeVelocityChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of Stepper.nativeVelocityChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepper.AllInstances.setNativeEvents">
            <summary>Sets the shim of Stepper.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepperDigitalInputCollection">
            <summary>Shim type of Phidgets.StepperDigitalInputCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperDigitalInputCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperDigitalInputCollection.#ctor(Phidgets.StepperDigitalInputCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperDigitalInputCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperDigitalInputCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperDigitalInputCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperDigitalInputCollection.ConstructorStepper">
            <summary>Sets the shim of StepperDigitalInputCollection.StepperDigitalInputCollection(Stepper phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperDigitalInputCollection.CountGet">
            <summary>Sets the shim of StepperDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperDigitalInputCollection.ItemGetInt32">
            <summary>Sets the shim of StepperDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepperDigitalInputCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperDigitalInputCollection.AllInstances.CountGet">
            <summary>Sets the shim of StepperDigitalInputCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperDigitalInputCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of StepperDigitalInputCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepperStepper">
            <summary>Shim type of Phidgets.StepperStepper</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepper.#ctor(Phidgets.StepperStepper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AccelerationGet">
            <summary>Sets the shim of StepperStepper.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AccelerationMaxGet">
            <summary>Sets the shim of StepperStepper.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AccelerationMinGet">
            <summary>Sets the shim of StepperStepper.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AccelerationSetDouble">
            <summary>Sets the shim of StepperStepper.set_Acceleration(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.ConstructorIntPtrInt32">
            <summary>Sets the shim of StepperStepper.StepperStepper(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.CurrentGet">
            <summary>Sets the shim of StepperStepper.get_Current()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.CurrentLimitGet">
            <summary>Sets the shim of StepperStepper.get_CurrentLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.CurrentLimitSetDouble">
            <summary>Sets the shim of StepperStepper.set_CurrentLimit(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.CurrentMaxGet">
            <summary>Sets the shim of StepperStepper.get_CurrentMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.CurrentMinGet">
            <summary>Sets the shim of StepperStepper.get_CurrentMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.CurrentPositionGet">
            <summary>Sets the shim of StepperStepper.get_CurrentPosition()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.CurrentPositionSetInt64">
            <summary>Sets the shim of StepperStepper.set_CurrentPosition(Int64 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.EngagedGet">
            <summary>Sets the shim of StepperStepper.get_Engaged()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.EngagedSetBoolean">
            <summary>Sets the shim of StepperStepper.set_Engaged(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.PositionMaxGet">
            <summary>Sets the shim of StepperStepper.get_PositionMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.PositionMinGet">
            <summary>Sets the shim of StepperStepper.get_PositionMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.StoppedGet">
            <summary>Sets the shim of StepperStepper.get_Stopped()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.TargetPositionGet">
            <summary>Sets the shim of StepperStepper.get_TargetPosition()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.TargetPositionSetInt64">
            <summary>Sets the shim of StepperStepper.set_TargetPosition(Int64 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.VelocityGet">
            <summary>Sets the shim of StepperStepper.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.VelocityLimitGet">
            <summary>Sets the shim of StepperStepper.get_VelocityLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.VelocityLimitSetDouble">
            <summary>Sets the shim of StepperStepper.set_VelocityLimit(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.VelocityMaxGet">
            <summary>Sets the shim of StepperStepper.get_VelocityMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.VelocityMinGet">
            <summary>Sets the shim of StepperStepper.get_VelocityMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepperStepper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.AccelerationGet">
            <summary>Sets the shim of StepperStepper.get_Acceleration()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.AccelerationMaxGet">
            <summary>Sets the shim of StepperStepper.get_AccelerationMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.AccelerationMinGet">
            <summary>Sets the shim of StepperStepper.get_AccelerationMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.AccelerationSetDouble">
            <summary>Sets the shim of StepperStepper.set_Acceleration(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.CurrentGet">
            <summary>Sets the shim of StepperStepper.get_Current()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.CurrentLimitGet">
            <summary>Sets the shim of StepperStepper.get_CurrentLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.CurrentLimitSetDouble">
            <summary>Sets the shim of StepperStepper.set_CurrentLimit(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.CurrentMaxGet">
            <summary>Sets the shim of StepperStepper.get_CurrentMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.CurrentMinGet">
            <summary>Sets the shim of StepperStepper.get_CurrentMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.CurrentPositionGet">
            <summary>Sets the shim of StepperStepper.get_CurrentPosition()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.CurrentPositionSetInt64">
            <summary>Sets the shim of StepperStepper.set_CurrentPosition(Int64 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.EngagedGet">
            <summary>Sets the shim of StepperStepper.get_Engaged()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.EngagedSetBoolean">
            <summary>Sets the shim of StepperStepper.set_Engaged(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.PositionMaxGet">
            <summary>Sets the shim of StepperStepper.get_PositionMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.PositionMinGet">
            <summary>Sets the shim of StepperStepper.get_PositionMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.StoppedGet">
            <summary>Sets the shim of StepperStepper.get_Stopped()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.TargetPositionGet">
            <summary>Sets the shim of StepperStepper.get_TargetPosition()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.TargetPositionSetInt64">
            <summary>Sets the shim of StepperStepper.set_TargetPosition(Int64 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.VelocityGet">
            <summary>Sets the shim of StepperStepper.get_Velocity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.VelocityLimitGet">
            <summary>Sets the shim of StepperStepper.get_VelocityLimit()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.VelocityLimitSetDouble">
            <summary>Sets the shim of StepperStepper.set_VelocityLimit(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.VelocityMaxGet">
            <summary>Sets the shim of StepperStepper.get_VelocityMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepper.AllInstances.VelocityMinGet">
            <summary>Sets the shim of StepperStepper.get_VelocityMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepperStepperCollection">
            <summary>Shim type of Phidgets.StepperStepperCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepperCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepperCollection.#ctor(Phidgets.StepperStepperCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepperCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepperCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepperCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimStepperStepperCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.Clear">
            <summary>Sets the shim of StepperStepperCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.ConstructorStepper">
            <summary>Sets the shim of StepperStepperCollection.StepperStepperCollection(Stepper phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.Initialize">
            <summary>Sets the shim of StepperStepperCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.ItemGetInt32">
            <summary>Sets the shim of StepperStepperCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimStepperStepperCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.AllInstances.Clear">
            <summary>Sets the shim of StepperStepperCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.AllInstances.Initialize">
            <summary>Sets the shim of StepperStepperCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimStepperStepperCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of StepperStepperCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensor">
            <summary>Shim type of Phidgets.TemperatureSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensor.#ctor(Phidgets.TemperatureSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of TemperatureSensor.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.Constructor">
            <summary>Sets the shim of TemperatureSensor.TemperatureSensor()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of TemperatureSensor.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.OnTemperatureChangeTemperatureChangeEventArgs">
            <summary>Sets the shim of TemperatureSensor.OnTemperatureChange(TemperatureChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.TemperatureChangeAddTemperatureChangeEventHandler">
            <summary>Sets the shim of TemperatureSensor.add_TemperatureChange(TemperatureChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.TemperatureChangeRemoveTemperatureChangeEventHandler">
            <summary>Sets the shim of TemperatureSensor.remove_TemperatureChange(TemperatureChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.nativeTemperatureChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of TemperatureSensor.nativeTemperatureChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.setNativeEvents">
            <summary>Sets the shim of TemperatureSensor.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of TemperatureSensor.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of TemperatureSensor.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AllInstances.OnTemperatureChangeTemperatureChangeEventArgs">
            <summary>Sets the shim of TemperatureSensor.OnTemperatureChange(TemperatureChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AllInstances.TemperatureChangeAddTemperatureChangeEventHandler">
            <summary>Sets the shim of TemperatureSensor.add_TemperatureChange(TemperatureChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AllInstances.TemperatureChangeRemoveTemperatureChangeEventHandler">
            <summary>Sets the shim of TemperatureSensor.remove_TemperatureChange(TemperatureChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AllInstances.nativeTemperatureChangeEventIntPtrIntPtrInt32Double">
            <summary>Sets the shim of TemperatureSensor.nativeTemperatureChangeEvent(IntPtr phidA, IntPtr userPtr, Int32 index, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensor.AllInstances.setNativeEvents">
            <summary>Sets the shim of TemperatureSensor.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor">
            <summary>Shim type of Phidgets.TemperatureSensorAmbientSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.#ctor(Phidgets.TemperatureSensorAmbientSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.ConstructorTemperatureSensor">
            <summary>Sets the shim of TemperatureSensorAmbientSensor.TemperatureSensorAmbientSensor(TemperatureSensor phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.TemperatureGet">
            <summary>Sets the shim of TemperatureSensorAmbientSensor.get_Temperature()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.TemperatureMaxGet">
            <summary>Sets the shim of TemperatureSensorAmbientSensor.get_TemperatureMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.TemperatureMinGet">
            <summary>Sets the shim of TemperatureSensorAmbientSensor.get_TemperatureMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.AllInstances.TemperatureGet">
            <summary>Sets the shim of TemperatureSensorAmbientSensor.get_Temperature()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.AllInstances.TemperatureMaxGet">
            <summary>Sets the shim of TemperatureSensorAmbientSensor.get_TemperatureMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorAmbientSensor.AllInstances.TemperatureMinGet">
            <summary>Sets the shim of TemperatureSensorAmbientSensor.get_TemperatureMin()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensorSensor">
            <summary>Shim type of Phidgets.TemperatureSensorSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensor.#ctor(Phidgets.TemperatureSensorSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.ConstructorIntPtrInt32">
            <summary>Sets the shim of TemperatureSensorSensor.TemperatureSensorSensor(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.Int32toThermocoupleTypeInt32">
            <summary>Sets the shim of TemperatureSensorSensor.Int32toThermocoupleType(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.PotentialGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Potential()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.PotentialMaxGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_PotentialMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.PotentialMinGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_PotentialMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.SensitivityGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.SensitivitySetDouble">
            <summary>Sets the shim of TemperatureSensorSensor.set_Sensitivity(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.TemperatureGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Temperature()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.TemperatureMaxGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_TemperatureMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.TemperatureMinGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_TemperatureMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.ThermocoupleTypetoInt32TemperatureSensorSensorThermocoupleType">
            <summary>Sets the shim of TemperatureSensorSensor.ThermocoupleTypetoInt32(ThermocoupleType level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.TypeGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.TypeSetTemperatureSensorSensorThermocoupleType">
            <summary>Sets the shim of TemperatureSensorSensor.set_Type(ThermocoupleType value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.Int32toThermocoupleTypeInt32">
            <summary>Sets the shim of TemperatureSensorSensor.Int32toThermocoupleType(Int32 level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.PotentialGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Potential()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.PotentialMaxGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_PotentialMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.PotentialMinGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_PotentialMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.SensitivityGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.SensitivitySetDouble">
            <summary>Sets the shim of TemperatureSensorSensor.set_Sensitivity(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.TemperatureGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Temperature()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.TemperatureMaxGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_TemperatureMax()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.TemperatureMinGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_TemperatureMin()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.ThermocoupleTypetoInt32TemperatureSensorSensorThermocoupleType">
            <summary>Sets the shim of TemperatureSensorSensor.ThermocoupleTypetoInt32(ThermocoupleType level)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.TypeGet">
            <summary>Sets the shim of TemperatureSensorSensor.get_Type()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensor.AllInstances.TypeSetTemperatureSensorSensorThermocoupleType">
            <summary>Sets the shim of TemperatureSensorSensor.set_Type(ThermocoupleType value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensorSensorCollection">
            <summary>Shim type of Phidgets.TemperatureSensorSensorCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.#ctor(Phidgets.TemperatureSensorSensorCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.Clear">
            <summary>Sets the shim of TemperatureSensorSensorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.ConstructorTemperatureSensor">
            <summary>Sets the shim of TemperatureSensorSensorCollection.TemperatureSensorSensorCollection(TemperatureSensor phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.Initialize">
            <summary>Sets the shim of TemperatureSensorSensorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.ItemGetInt32">
            <summary>Sets the shim of TemperatureSensorSensorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.AllInstances.Clear">
            <summary>Sets the shim of TemperatureSensorSensorCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.AllInstances.Initialize">
            <summary>Sets the shim of TemperatureSensorSensorCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTemperatureSensorSensorCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TemperatureSensorSensorCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCD">
            <summary>Shim type of Phidgets.TextLCD</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCD.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCD.#ctor(Phidgets.TextLCD)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCD.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCD.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of TextLCD.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.BacklightGet">
            <summary>Sets the shim of TextLCD.get_Backlight()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.BacklightSetBoolean">
            <summary>Sets the shim of TextLCD.set_Backlight(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.BrightnessGet">
            <summary>Sets the shim of TextLCD.get_Brightness()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.BrightnessSetInt32">
            <summary>Sets the shim of TextLCD.set_Brightness(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.Constructor">
            <summary>Sets the shim of TextLCD.TextLCD()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.ContrastGet">
            <summary>Sets the shim of TextLCD.get_Contrast()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.ContrastSetInt32">
            <summary>Sets the shim of TextLCD.set_Contrast(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.CursorBlinkGet">
            <summary>Sets the shim of TextLCD.get_CursorBlink()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.CursorBlinkSetBoolean">
            <summary>Sets the shim of TextLCD.set_CursorBlink(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.CursorGet">
            <summary>Sets the shim of TextLCD.get_Cursor()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.CursorSetBoolean">
            <summary>Sets the shim of TextLCD.set_Cursor(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of TextLCD.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.ScreenCountGet">
            <summary>Sets the shim of TextLCD.get_ScreenCount()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.ScreenGet">
            <summary>Sets the shim of TextLCD.get_Screen()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.ScreenSetInt32">
            <summary>Sets the shim of TextLCD.set_Screen(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.ScreenSizeGet">
            <summary>Sets the shim of TextLCD.get_ScreenSize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.ScreenSizeSetTextLCDScreenSizes">
            <summary>Sets the shim of TextLCD.set_ScreenSize(ScreenSizes value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.initialize">
            <summary>Sets the shim of TextLCD.initialize()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCD.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of TextLCD.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.BacklightGet">
            <summary>Sets the shim of TextLCD.get_Backlight()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.BacklightSetBoolean">
            <summary>Sets the shim of TextLCD.set_Backlight(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.BrightnessGet">
            <summary>Sets the shim of TextLCD.get_Brightness()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.BrightnessSetInt32">
            <summary>Sets the shim of TextLCD.set_Brightness(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.ContrastGet">
            <summary>Sets the shim of TextLCD.get_Contrast()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.ContrastSetInt32">
            <summary>Sets the shim of TextLCD.set_Contrast(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.CursorBlinkGet">
            <summary>Sets the shim of TextLCD.get_CursorBlink()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.CursorBlinkSetBoolean">
            <summary>Sets the shim of TextLCD.set_CursorBlink(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.CursorGet">
            <summary>Sets the shim of TextLCD.get_Cursor()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.CursorSetBoolean">
            <summary>Sets the shim of TextLCD.set_Cursor(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of TextLCD.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.ScreenCountGet">
            <summary>Sets the shim of TextLCD.get_ScreenCount()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.ScreenGet">
            <summary>Sets the shim of TextLCD.get_Screen()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.ScreenSetInt32">
            <summary>Sets the shim of TextLCD.set_Screen(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.ScreenSizeGet">
            <summary>Sets the shim of TextLCD.get_ScreenSize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.ScreenSizeSetTextLCDScreenSizes">
            <summary>Sets the shim of TextLCD.set_ScreenSize(ScreenSizes value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCD.AllInstances.initialize">
            <summary>Sets the shim of TextLCD.initialize()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDColumnCollection">
            <summary>Shim type of Phidgets.TextLCDColumnCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDColumnCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDColumnCollection.#ctor(Phidgets.TextLCDColumnCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDColumnCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDColumnCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDColumnCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDColumnCollection.ConstructorIntPtrInt32">
            <summary>Sets the shim of TextLCDColumnCollection.TextLCDColumnCollection(IntPtr phid, Int32 row)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDColumnCollection.ConstructorIntPtrInt32Int32Object">
            <summary>Sets the shim of TextLCDColumnCollection.TextLCDColumnCollection(IntPtr phid, Int32 row, Int32 screenIndex, Object screenLock)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDColumnCollection.CountGet">
            <summary>Sets the shim of TextLCDColumnCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDColumnCollection.ItemSetInt32Char">
            <summary>Sets the shim of TextLCDColumnCollection.set_Item(Int32 index, Char value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDColumnCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDColumnCollection.AllInstances.CountGet">
            <summary>Sets the shim of TextLCDColumnCollection.get_Count()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDColumnCollection.AllInstances.ItemSetInt32Char">
            <summary>Sets the shim of TextLCDColumnCollection.set_Item(Int32 index, Char value)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDCustomCharacter">
            <summary>Shim type of Phidgets.TextLCDCustomCharacter</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacter.#ctor(Phidgets.TextLCDCustomCharacter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacter.ConstructorIntPtrInt32">
            <summary>Sets the shim of TextLCDCustomCharacter.TextLCDCustomCharacter(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacter.ConstructorIntPtrInt32Int32Object">
            <summary>Sets the shim of TextLCDCustomCharacter.TextLCDCustomCharacter(IntPtr phid, Int32 index, Int32 screenIndex, Object screenLock)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacter.StringCodeGet">
            <summary>Sets the shim of TextLCDCustomCharacter.get_StringCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacter.setCustomCharacterInt32Int32">
            <summary>Sets the shim of TextLCDCustomCharacter.setCustomCharacter(Int32 value1, Int32 value2)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDCustomCharacter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacter.AllInstances.StringCodeGet">
            <summary>Sets the shim of TextLCDCustomCharacter.get_StringCode()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacter.AllInstances.setCustomCharacterInt32Int32">
            <summary>Sets the shim of TextLCDCustomCharacter.setCustomCharacter(Int32 value1, Int32 value2)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection">
            <summary>Shim type of Phidgets.TextLCDCustomCharacterCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.#ctor(Phidgets.TextLCDCustomCharacterCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.ConstructorIntPtr">
            <summary>Sets the shim of TextLCDCustomCharacterCollection.TextLCDCustomCharacterCollection(IntPtr phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.ConstructorIntPtrInt32Object">
            <summary>Sets the shim of TextLCDCustomCharacterCollection.TextLCDCustomCharacterCollection(IntPtr phid, Int32 screenIndex, Object screenLock)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.ItemGetInt32">
            <summary>Sets the shim of TextLCDCustomCharacterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDCustomCharacterCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TextLCDCustomCharacterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDRow">
            <summary>Shim type of Phidgets.TextLCDRow</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRow.#ctor(Phidgets.TextLCDRow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRow.ConstructorIntPtrInt32">
            <summary>Sets the shim of TextLCDRow.TextLCDRow(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRow.ConstructorIntPtrInt32Int32Object">
            <summary>Sets the shim of TextLCDRow.TextLCDRow(IntPtr phid, Int32 index, Int32 screenIndex, Object screenLock)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRow.DisplayStringSetString">
            <summary>Sets the shim of TextLCDRow.set_DisplayString(String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRow.MaximumLengthGet">
            <summary>Sets the shim of TextLCDRow.get_MaximumLength()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRow.AllInstances.DisplayStringSetString">
            <summary>Sets the shim of TextLCDRow.set_DisplayString(String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRow.AllInstances.MaximumLengthGet">
            <summary>Sets the shim of TextLCDRow.get_MaximumLength()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDRowCollection">
            <summary>Shim type of Phidgets.TextLCDRowCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRowCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRowCollection.#ctor(Phidgets.TextLCDRowCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRowCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRowCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRowCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDRowCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.Clear">
            <summary>Sets the shim of TextLCDRowCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.ConstructorIntPtr">
            <summary>Sets the shim of TextLCDRowCollection.TextLCDRowCollection(IntPtr phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.ConstructorIntPtrInt32Object">
            <summary>Sets the shim of TextLCDRowCollection.TextLCDRowCollection(IntPtr phid, Int32 screenIndex, Object screenLock)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.Initialize">
            <summary>Sets the shim of TextLCDRowCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.ItemGetInt32">
            <summary>Sets the shim of TextLCDRowCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDRowCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.AllInstances.Clear">
            <summary>Sets the shim of TextLCDRowCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.AllInstances.Initialize">
            <summary>Sets the shim of TextLCDRowCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDRowCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TextLCDRowCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDScreen">
            <summary>Shim type of Phidgets.TextLCDScreen</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreen.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreen.#ctor(Phidgets.TextLCDScreen)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.BacklightGet">
            <summary>Sets the shim of TextLCDScreen.get_Backlight()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.BacklightSetBoolean">
            <summary>Sets the shim of TextLCDScreen.set_Backlight(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.BrightnessGet">
            <summary>Sets the shim of TextLCDScreen.get_Brightness()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.BrightnessSetInt32">
            <summary>Sets the shim of TextLCDScreen.set_Brightness(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.ConstructorIntPtrInt32Object">
            <summary>Sets the shim of TextLCDScreen.TextLCDScreen(IntPtr phid, Int32 index, Object screenLock)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.ContrastGet">
            <summary>Sets the shim of TextLCDScreen.get_Contrast()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.ContrastSetInt32">
            <summary>Sets the shim of TextLCDScreen.set_Contrast(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.CursorBlinkGet">
            <summary>Sets the shim of TextLCDScreen.get_CursorBlink()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.CursorBlinkSetBoolean">
            <summary>Sets the shim of TextLCDScreen.set_CursorBlink(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.CursorGet">
            <summary>Sets the shim of TextLCDScreen.get_Cursor()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.CursorSetBoolean">
            <summary>Sets the shim of TextLCDScreen.set_Cursor(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.ScreenSizeGet">
            <summary>Sets the shim of TextLCDScreen.get_ScreenSize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.ScreenSizeSetTextLCDScreenSizes">
            <summary>Sets the shim of TextLCDScreen.set_ScreenSize(ScreenSizes value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.initialize">
            <summary>Sets the shim of TextLCDScreen.initialize()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDScreen.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.BacklightGet">
            <summary>Sets the shim of TextLCDScreen.get_Backlight()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.BacklightSetBoolean">
            <summary>Sets the shim of TextLCDScreen.set_Backlight(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.BrightnessGet">
            <summary>Sets the shim of TextLCDScreen.get_Brightness()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.BrightnessSetInt32">
            <summary>Sets the shim of TextLCDScreen.set_Brightness(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.ContrastGet">
            <summary>Sets the shim of TextLCDScreen.get_Contrast()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.ContrastSetInt32">
            <summary>Sets the shim of TextLCDScreen.set_Contrast(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.CursorBlinkGet">
            <summary>Sets the shim of TextLCDScreen.get_CursorBlink()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.CursorBlinkSetBoolean">
            <summary>Sets the shim of TextLCDScreen.set_CursorBlink(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.CursorGet">
            <summary>Sets the shim of TextLCDScreen.get_Cursor()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.CursorSetBoolean">
            <summary>Sets the shim of TextLCDScreen.set_Cursor(Boolean value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.ScreenSizeGet">
            <summary>Sets the shim of TextLCDScreen.get_ScreenSize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.ScreenSizeSetTextLCDScreenSizes">
            <summary>Sets the shim of TextLCDScreen.set_ScreenSize(ScreenSizes value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreen.AllInstances.initialize">
            <summary>Sets the shim of TextLCDScreen.initialize()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDScreenCollection">
            <summary>Shim type of Phidgets.TextLCDScreenCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreenCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreenCollection.#ctor(Phidgets.TextLCDScreenCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreenCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreenCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreenCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLCDScreenCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.Clear">
            <summary>Sets the shim of TextLCDScreenCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.ConstructorIntPtrObject">
            <summary>Sets the shim of TextLCDScreenCollection.TextLCDScreenCollection(IntPtr phid, Object screenLock)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.Initialize">
            <summary>Sets the shim of TextLCDScreenCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.ItemGetInt32">
            <summary>Sets the shim of TextLCDScreenCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLCDScreenCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.AllInstances.Clear">
            <summary>Sets the shim of TextLCDScreenCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.AllInstances.Initialize">
            <summary>Sets the shim of TextLCDScreenCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLCDScreenCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TextLCDScreenCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLED">
            <summary>Shim type of Phidgets.TextLED</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLED.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLED.#ctor(Phidgets.TextLED)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLED.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLED.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of TextLED.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.BrightnessGet">
            <summary>Sets the shim of TextLED.get_Brightness()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.BrightnessSetInt32">
            <summary>Sets the shim of TextLED.set_Brightness(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.Constructor">
            <summary>Sets the shim of TextLED.TextLED()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of TextLED.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLED.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of TextLED.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.AllInstances.BrightnessGet">
            <summary>Sets the shim of TextLED.get_Brightness()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.AllInstances.BrightnessSetInt32">
            <summary>Sets the shim of TextLED.set_Brightness(Int32 value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLED.AllInstances.DetachEventObjectDetachEventArgs">
            <summary>Sets the shim of TextLED.DetachEvent(Object sender, DetachEventArgs e)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLEDRow">
            <summary>Shim type of Phidgets.TextLEDRow</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRow.#ctor(Phidgets.TextLEDRow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRow.ConstructorIntPtrInt32">
            <summary>Sets the shim of TextLEDRow.TextLEDRow(IntPtr phid, Int32 index)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRow.DisplayStringSetString">
            <summary>Sets the shim of TextLEDRow.set_DisplayString(String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRow.MaximumLengthGet">
            <summary>Sets the shim of TextLEDRow.get_MaximumLength()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLEDRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRow.AllInstances.DisplayStringSetString">
            <summary>Sets the shim of TextLEDRow.set_DisplayString(String value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRow.AllInstances.MaximumLengthGet">
            <summary>Sets the shim of TextLEDRow.get_MaximumLength()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLEDRowCollection">
            <summary>Shim type of Phidgets.TextLEDRowCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRowCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRowCollection.#ctor(Phidgets.TextLEDRowCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRowCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRowCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRowCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimTextLEDRowCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.Clear">
            <summary>Sets the shim of TextLEDRowCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.ConstructorTextLED">
            <summary>Sets the shim of TextLEDRowCollection.TextLEDRowCollection(TextLED phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.Initialize">
            <summary>Sets the shim of TextLEDRowCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.ItemGetInt32">
            <summary>Sets the shim of TextLEDRowCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimTextLEDRowCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.AllInstances.Clear">
            <summary>Sets the shim of TextLEDRowCollection.Clear()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.AllInstances.Initialize">
            <summary>Sets the shim of TextLEDRowCollection.Initialize()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimTextLEDRowCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of TextLEDRowCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimWeightSensor">
            <summary>Shim type of Phidgets.WeightSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensor.#ctor(Phidgets.WeightSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of WeightSensor.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.Constructor">
            <summary>Sets the shim of WeightSensor.WeightSensor()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.OnWeightChangeWeightChangeEventArgs">
            <summary>Sets the shim of WeightSensor.OnWeightChange(WeightChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.WeightChangeAddWeightChangeEventHandler">
            <summary>Sets the shim of WeightSensor.add_WeightChange(WeightChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.WeightChangeRemoveWeightChangeEventHandler">
            <summary>Sets the shim of WeightSensor.remove_WeightChange(WeightChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.nativeWeightChangeEventIntPtrIntPtrDouble">
            <summary>Sets the shim of WeightSensor.nativeWeightChangeEvent(IntPtr phidA, IntPtr userPtr, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.setNativeEvents">
            <summary>Sets the shim of WeightSensor.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimWeightSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.AllInstances.AttachEventObjectAttachEventArgs">
            <summary>Sets the shim of WeightSensor.AttachEvent(Object sender, AttachEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.AllInstances.OnWeightChangeWeightChangeEventArgs">
            <summary>Sets the shim of WeightSensor.OnWeightChange(WeightChangeEventArgs e)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.AllInstances.WeightChangeAddWeightChangeEventHandler">
            <summary>Sets the shim of WeightSensor.add_WeightChange(WeightChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.AllInstances.WeightChangeRemoveWeightChangeEventHandler">
            <summary>Sets the shim of WeightSensor.remove_WeightChange(WeightChangeEventHandler value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.AllInstances.nativeWeightChangeEventIntPtrIntPtrDouble">
            <summary>Sets the shim of WeightSensor.nativeWeightChangeEvent(IntPtr phidA, IntPtr userPtr, Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensor.AllInstances.setNativeEvents">
            <summary>Sets the shim of WeightSensor.setNativeEvents()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimWeightSensorSensor">
            <summary>Shim type of Phidgets.WeightSensorSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensorSensor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensorSensor.#ctor(Phidgets.WeightSensorSensor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensorSensor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Phidgets.Fakes.ShimWeightSensorSensor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.ConstructorWeightSensor">
            <summary>Sets the shim of WeightSensorSensor.WeightSensorSensor(WeightSensor phid)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.SensitivityGet">
            <summary>Sets the shim of WeightSensorSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.SensitivitySetDouble">
            <summary>Sets the shim of WeightSensorSensor.set_Sensitivity(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.WeightGet">
            <summary>Sets the shim of WeightSensorSensor.get_Weight()</summary>
        </member>
        <member name="T:Phidgets.Fakes.ShimWeightSensorSensor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.AllInstances.SensitivityGet">
            <summary>Sets the shim of WeightSensorSensor.get_Sensitivity()</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.AllInstances.SensitivitySetDouble">
            <summary>Sets the shim of WeightSensorSensor.set_Sensitivity(Double value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.ShimWeightSensorSensor.AllInstances.WeightGet">
            <summary>Sets the shim of WeightSensorSensor.get_Weight()</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubAccelerometer">
            <summary>Stub type of Phidgets.Accelerometer</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAccelerometer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAccelerometer.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubAccelerometer.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAccelerometer.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubAccelerometer.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAccelerometer.InitializeStub">
            <summary>Initializes a new instance of type StubAccelerometer</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAccelerometer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAccelerometer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAccelerometer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubAdvancedServo">
            <summary>Stub type of Phidgets.AdvancedServo</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAdvancedServo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAdvancedServo.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubAdvancedServo.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAdvancedServo.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubAdvancedServo.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAdvancedServo.InitializeStub">
            <summary>Initializes a new instance of type StubAdvancedServo</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAdvancedServo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAdvancedServo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAdvancedServo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubAnalog">
            <summary>Stub type of Phidgets.Analog</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAnalog.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAnalog.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubAnalog.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAnalog.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubAnalog.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubAnalog.InitializeStub">
            <summary>Initializes a new instance of type StubAnalog</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAnalog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAnalog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubAnalog.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubBridge">
            <summary>Stub type of Phidgets.Bridge</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubBridge.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubBridge.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubBridge.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubBridge.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubBridge.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubBridge.InitializeStub">
            <summary>Initializes a new instance of type StubBridge</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubBridge.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubBridge.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubBridge.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubDictionary">
            <summary>Stub type of Phidgets.Dictionary</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubDictionary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubDictionary.InitializeStub">
            <summary>Initializes a new instance of type StubDictionary</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubDictionary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubDictionary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubDictionary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubEncoder">
            <summary>Stub type of Phidgets.Encoder</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubEncoder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubEncoder.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubEncoder.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubEncoder.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubEncoder.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubEncoder.InitializeStub">
            <summary>Initializes a new instance of type StubEncoder</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubEncoder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubEncoder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubEncoder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubFrequencyCounter">
            <summary>Stub type of Phidgets.FrequencyCounter</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubFrequencyCounter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubFrequencyCounter.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubFrequencyCounter.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubFrequencyCounter.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubFrequencyCounter.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubFrequencyCounter.InitializeStub">
            <summary>Initializes a new instance of type StubFrequencyCounter</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubFrequencyCounter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubFrequencyCounter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubFrequencyCounter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubGPS">
            <summary>Stub type of Phidgets.GPS</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubGPS.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubGPS.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubGPS.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubGPS.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubGPS.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubGPS.InitializeStub">
            <summary>Initializes a new instance of type StubGPS</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubGPS.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubGPS.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubGPS.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubIR">
            <summary>Stub type of Phidgets.IR</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIR.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIR.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubIR.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIR.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubIR.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIR.InitializeStub">
            <summary>Initializes a new instance of type StubIR</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIR.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIR.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIR.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubIRCode">
            <summary>Stub type of Phidgets.IRCode</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCode.#ctor(System.Byte[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCode.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCode.InitializeStub">
            <summary>Initializes a new instance of type StubIRCode</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCode.ToString">
            <summary>Sets the stub of IRCode.ToString()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubIRCode.ToString01">
            <summary>Sets the stub of IRCode.ToString()</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIRCode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIRCode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIRCode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubIRCodeInfo">
            <summary>Stub type of Phidgets.IRCodeInfo</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCodeInfo.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCodeInfo.#ctor(Phidgets.IRCodeInfo.IREncoding,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCodeInfo.#ctor(Phidgets.IRCodeInfo.IREncoding,System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCodeInfo.#ctor(Phidgets.IRCodeInfo.IREncoding,System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32,System.Int32,System.Int32[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCodeInfo.#ctor(Phidgets.IRCodeInfo.IREncoding,System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32,System.Int32,System.Int32[],System.Int32,System.Byte[],Phidgets.IRCodeInfo.IRCodeLength,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubIRCodeInfo.InitializeStub">
            <summary>Initializes a new instance of type StubIRCodeInfo</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIRCodeInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIRCodeInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubIRCodeInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubInterfaceKit">
            <summary>Stub type of Phidgets.InterfaceKit</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubInterfaceKit.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubInterfaceKit.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubInterfaceKit.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubInterfaceKit.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubInterfaceKit.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubInterfaceKit.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceKit</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubInterfaceKit.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubInterfaceKit.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubInterfaceKit.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubKeyListener">
            <summary>Stub type of Phidgets.KeyListener</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubKeyListener.#ctor(Phidgets.Dictionary,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubKeyListener.InitializeStub">
            <summary>Initializes a new instance of type StubKeyListener</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubKeyListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubKeyListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubKeyListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubLED">
            <summary>Stub type of Phidgets.LED</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubLED.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubLED.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubLED.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubLED.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubLED.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubLED.InitializeStub">
            <summary>Initializes a new instance of type StubLED</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubLED.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubLED.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubLED.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubManager">
            <summary>Stub type of Phidgets.Manager</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubManager.InitializeStub">
            <summary>Initializes a new instance of type StubManager</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubMotorControl">
            <summary>Stub type of Phidgets.MotorControl</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubMotorControl.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubMotorControl.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubMotorControl.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubMotorControl.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubMotorControl.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubMotorControl.InitializeStub">
            <summary>Initializes a new instance of type StubMotorControl</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubMotorControl.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubMotorControl.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubMotorControl.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubPHSensor">
            <summary>Stub type of Phidgets.PHSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPHSensor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPHSensor.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPHSensor.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPHSensor.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPHSensor.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPHSensor.InitializeStub">
            <summary>Initializes a new instance of type StubPHSensor</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPHSensor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPHSensor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPHSensor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubPhidget">
            <summary>Stub type of Phidgets.Phidget</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidget.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidget.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidget.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidget.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidget.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidget.InitializeStub">
            <summary>Initializes a new instance of type StubPhidget</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidget.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidget.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidget.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubPhidgetCollection">
            <summary>Stub type of Phidgets.PhidgetCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.InitializeStub">
            <summary>Initializes a new instance of type StubPhidgetCollection</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnClear">
            <summary>Sets the stub of CollectionBase.OnClear()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnClear01">
            <summary>Sets the stub of CollectionBase.OnClear()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnClearComplete">
            <summary>Sets the stub of CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnClearComplete01">
            <summary>Sets the stub of CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnInsert(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnInsertCompleteInt32Object">
            <summary>Sets the stub of CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnInsertInt32Object">
            <summary>Sets the stub of CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnRemove(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnRemoveCompleteInt32Object">
            <summary>Sets the stub of CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnRemoveInt32Object">
            <summary>Sets the stub of CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Sets the stub of CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Sets the stub of CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnSetCompleteInt32ObjectObject">
            <summary>Sets the stub of CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnSetInt32ObjectObject">
            <summary>Sets the stub of CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetCollection.OnValidate(System.Object)">
            <summary>Sets the stub of CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetCollection.OnValidateObject">
            <summary>Sets the stub of CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubPhidgetException">
            <summary>Stub type of Phidgets.PhidgetException</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.#ctor(System.String,Phidgets.PhidgetException.ErrorType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubPhidgetException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubPhidgetException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.InitializeStub">
            <summary>Initializes a new instance of type StubPhidgetException</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubPhidgetException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubPhidgetException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubPhidgetException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubRFID">
            <summary>Stub type of Phidgets.RFID</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubRFID.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubRFID.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubRFID.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubRFID.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubRFID.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubRFID.InitializeStub">
            <summary>Initializes a new instance of type StubRFID</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubRFID.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubRFID.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubRFID.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubServo">
            <summary>Stub type of Phidgets.Servo</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubServo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubServo.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubServo.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubServo.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubServo.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubServo.InitializeStub">
            <summary>Initializes a new instance of type StubServo</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubServo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubServo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubServo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubSpatial">
            <summary>Stub type of Phidgets.Spatial</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubSpatial.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubSpatial.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubSpatial.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubSpatial.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubSpatial.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubSpatial.InitializeStub">
            <summary>Initializes a new instance of type StubSpatial</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubSpatial.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubSpatial.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubSpatial.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubStepper">
            <summary>Stub type of Phidgets.Stepper</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubStepper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubStepper.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubStepper.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubStepper.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubStepper.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubStepper.InitializeStub">
            <summary>Initializes a new instance of type StubStepper</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubStepper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubStepper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubStepper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubTemperatureSensor">
            <summary>Stub type of Phidgets.TemperatureSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTemperatureSensor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTemperatureSensor.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubTemperatureSensor.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTemperatureSensor.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubTemperatureSensor.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTemperatureSensor.InitializeStub">
            <summary>Initializes a new instance of type StubTemperatureSensor</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTemperatureSensor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTemperatureSensor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTemperatureSensor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubTextLCD">
            <summary>Stub type of Phidgets.TextLCD</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLCD.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLCD.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubTextLCD.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLCD.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubTextLCD.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLCD.InitializeStub">
            <summary>Initializes a new instance of type StubTextLCD</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTextLCD.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTextLCD.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTextLCD.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubTextLED">
            <summary>Stub type of Phidgets.TextLED</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLED.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLED.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubTextLED.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLED.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubTextLED.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubTextLED.InitializeStub">
            <summary>Initializes a new instance of type StubTextLED</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTextLED.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTextLED.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubTextLED.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Phidgets.Fakes.StubWeightSensor">
            <summary>Stub type of Phidgets.WeightSensor</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubWeightSensor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubWeightSensor.Equals(System.Object)">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubWeightSensor.EqualsObject">
            <summary>Sets the stub of Phidget.Equals(Object comp)</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubWeightSensor.GetHashCode">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="F:Phidgets.Fakes.StubWeightSensor.GetHashCode01">
            <summary>Sets the stub of Phidget.GetHashCode()</summary>
        </member>
        <member name="M:Phidgets.Fakes.StubWeightSensor.InitializeStub">
            <summary>Initializes a new instance of type StubWeightSensor</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubWeightSensor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubWeightSensor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Phidgets.Fakes.StubWeightSensor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
